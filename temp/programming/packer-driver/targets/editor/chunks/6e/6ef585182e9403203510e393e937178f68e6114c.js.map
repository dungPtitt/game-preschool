{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/science/level1_science.ts"],"names":["_decorator","Component","Node","log","Prefab","tween","v3","Label","VDScreenManager","level_progress_bar","LocalDataManager","ccclass","property","level1_science","type","listAnswer","levelNumber","isShowPopup","canPlay","dem","progressLevelBar","onClickInstruction","onClickBack","instance","popToRootScreen","start","lev","level","getComponent","string","Number","startPlay","i","length","on","EventType","TOUCH_END","checkAnswer","bind","processCorrect","active","setScale","to","scale","handleShowPopNext","ob","getObject","checkDone","science","levelBarUI","handleProgress","setObject","fireWork","call","showPopupNext","update","deltaTime","showPopupFromPrefabName","popup","popupWin","finishedCallback","level2_screen","assetBundle","get","String","pushScreen","screen"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAqBC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,E,OAAAA,E;AAAIC,MAAAA,K,OAAAA,K;;AAEtEC,MAAAA,e;;AAGEC,MAAAA,kB,iBAAAA,kB;;AACFC,MAAAA,gB;;;;;;;;;OAKD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;gCAGjBa,c,WADZF,OAAO,CAAC,gBAAD,C,UAIHC,QAAQ,CAACV,IAAD,C,UACRU,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEZ;AAAP,OAAD,C,UAERU,QAAQ;AAAA;AAAA,mD,UAERA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEZ;AAAP,OAAD,C,2BATb,MACaW,cADb,SACoCZ,SADpC,CAC8C;AAAA;AAAA;AAAA,eAE1Cc,UAF0C,GAErB,EAFqB;;AAAA;;AAAA;;AAAA;;AAAA,eAWnCC,WAXmC,GAWrB,CAXqB;AAAA,eAYnCC,WAZmC,GAYrB,KAZqB;AAAA,eAalCC,OAbkC,GAaxB,IAbwB;AAAA,eAclCC,GAdkC,GAc5B,CAd4B;AAAA,eAe1CC,gBAf0C;AAAA;;AAiB1CC,QAAAA,kBAAkB,GAAG,CACjB;AACH;;AACDC,QAAAA,WAAW,GAAG;AACV;AACA;AACA;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,eAAzB;AACH;;AACDC,QAAAA,KAAK,GAAG;AACJ,cAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBrB,KAAxB,EAA+BsB,MAAzC;AACA,eAAKb,WAAL,GAAmBc,MAAM,CAACJ,GAAD,CAAzB;AACA,eAAKK,SAAL;AACH;;AAEDA,QAAAA,SAAS,GAAG;AACR,eAAKd,WAAL,GAAmB,KAAnB;;AACA,cAAG,KAAKC,OAAR,EAAgB;AACZ,iBAAI,IAAIc,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKjB,UAAL,CAAgBkB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,mBAAKjB,UAAL,CAAgBiB,CAAhB,EAAmBE,EAAnB,CAAsBhC,IAAI,CAACiC,SAAL,CAAeC,SAArC,EAAgD,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BN,CAA5B,CAAhD;AACH;AACJ;AAEJ;;AACDK,QAAAA,WAAW,CAACL,CAAD,EAAU;AACjB,eAAKO,cAAL,CAAoBP,CAApB;AACH;;AACDO,QAAAA,cAAc,CAACP,CAAD,EAAU;AACpB,eAAKjB,UAAL,CAAgBiB,CAAhB,EAAmBQ,MAAnB,GAA4B,IAA5B;AACA,eAAKzB,UAAL,CAAgBiB,CAAhB,EAAmBS,QAAnB,CAA4BnC,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX,CAA9B;AACAD,UAAAA,KAAK,CAAC,KAAKU,UAAL,CAAgBiB,CAAhB,CAAD,CAAL,CACCU,EADD,CACI,CADJ,EACO;AAACC,YAAAA,KAAK,EAAErC,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX;AAAV,WADP,EAECmB,KAFD;AAIA,eAAKN,GAAL;;AACA,cAAG,KAAKA,GAAL,IAAU,KAAKJ,UAAL,CAAgBkB,MAA7B,EAAqC;AACjC,iBAAKW,iBAAL;AACH;AACJ;;AACDA,QAAAA,iBAAiB,GAAE;AACf,cAAIC,EAAE,GAAG;AAAA;AAAA,oDAAiBC,SAAjB,CAA2B,OAA3B,EAAoC,EAApC,CAAT;AACA,cAAIC,SAAS,GAAGF,EAAE,CAACG,OAAH,CAAW,KAAKhC,WAAhB,CAAhB;;AACA,cAAG,KAAKiC,UAAR,EAAmB;AACf,gBAAG,CAACF,SAAJ,EAAe;AACX,mBAAKE,UAAL,CAAgBC,cAAhB;AAEH;;AACDL,YAAAA,EAAE,CAACG,OAAH,CAAW,KAAKhC,WAAL,GAAiB,CAA5B,IAAiC,IAAjC;AACA;AAAA;AAAA,sDAAiBmC,SAAjB,CAA2B,OAA3B,EAAoCN,EAApC;AACH;;AACD,eAAK3B,OAAL,GAAe,KAAf;AACA,eAAKkC,QAAL,CAAcZ,MAAd,GAAuB,IAAvB,CAZe,CAaf;;AACAnC,UAAAA,KAAK,CAAC,KAAK+C,QAAN,CAAL,CACCV,EADD,CACI,CADJ,EACO;AAACC,YAAAA,KAAK,EAAErC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAV,WADP,EAEC+C,IAFD,CAEM,MAAI;AACN,iBAAKC,aAAL;AACH,WAJD,EAKCD,IALD,CAKM,MAAI;AACN,iBAAKD,QAAL,CAAcZ,MAAd,GAAuB,KAAvB;AACH,WAPD,EAQCf,KARD;AASH;;AACD8B,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CAjFyC,CAkF1C;;;AACAF,QAAAA,aAAa,GAAG;AACZnD,UAAAA,GAAG,CAAC,OAAD,EAAU,KAAKa,WAAf,CAAH;AACA;AAAA;AAAA,kDAAgBO,QAAhB,CAAyBkC,uBAAzB,CAAiD,8BAAjD,EAAkFC,KAAD,IAAwB;AACrG,gBAAIC,QAAQ,GAAGD,KAAf,CADqG,CAErG;;AACAC,YAAAA,QAAQ,CAACC,gBAAT,GAA4B,MAAM;AAC9B,kBAAIC,aAAa,GAAG;AAAA;AAAA,sDAAgBtC,QAAhB,CAAyBuC,WAAzB,CAAqCC,GAArC,CAAyC,wCAAsCC,MAAM,CAAC,KAAKhD,WAAL,GAAiB,CAAlB,CAArF,EAA2GZ,MAA3G,CAApB;AACA;AAAA;AAAA,sDAAgBmB,QAAhB,CAAyB0C,UAAzB,CAAoCJ,aAApC,EAAoDK,MAAD,IAA0B,CAAG,CAAhF,EAAkF,IAAlF;AACA/D,cAAAA,GAAG,CAAC,wBAAD,CAAH;AACH,aAJD;AAKH,WARD,EAQG,KARH,EAQU,IARV,EAQgB,IARhB;AASH;;AA9FyC,O;;;;;iBAKzB,I;;;;;;;iBAEgB,I;;;;;;;iBAEnB,I","sourcesContent":["import { _decorator, Component, Node, Sprite, Color, log, Prefab, tween, v3, Label, Vec3, Button, UIOpacity } from 'cc';\r\nimport VDBaseScreen from '../../../../../vd-framework/ui/VDBaseScreen';\r\nimport VDScreenManager from '../../../../../vd-framework/ui/VDScreenManager';\r\nimport { ScaleFactor, scaleTo, scaleTo2, TimeFactor } from '../../transiton/Transformation';\r\n\r\nimport { level_progress_bar } from '../../transiton/level_progress_bar';\r\nimport LocalDataManager from '../../common/LocalDataManager';\r\nimport { handleFirework } from '../../common/handleFirework';\r\nimport { scaleAndHide } from '../../transiton/Transformation';\r\nimport VDBasePopup from '../../../../../vd-framework/ui/VDBasePopup';\r\nimport { popup_next } from '../../popups/popup_next';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_science')\r\nexport class level1_science extends Component {\r\n    \r\n    listAnswer: Node[] = [];\r\n    @property(Node)\r\n    @property({type: Node})\r\n    fireWork: Node = null;\r\n    @property(level_progress_bar)\r\n    levelBarUI: level_progress_bar = null;\r\n    @property({type: Node})\r\n    level: Node = null;\r\n\r\n    public levelNumber = 1;\r\n    public isShowPopup = false;\r\n    private canPlay = true;\r\n    private dem = 0;\r\n    progressLevelBar?: level_progress_bar;\r\n\r\n    onClickInstruction() {\r\n        // this.notAnswer.getComponent(UIOpacity).opacity = 100;\r\n    }\r\n    onClickBack() {\r\n        // VDScreenManager.instance.popScreen(true);\r\n        //cach 2\r\n        VDScreenManager.instance.popToRootScreen();\r\n    }\r\n    start() {\r\n        let lev = this.level.getComponent(Label).string;\r\n        this.levelNumber = Number(lev);\r\n        this.startPlay();\r\n    }\r\n\r\n    startPlay() { \r\n        this.isShowPopup = false;\r\n        if(this.canPlay){\r\n            for(let i=0; i<this.listAnswer.length; i++) {\r\n                this.listAnswer[i].on(Node.EventType.TOUCH_END, this.checkAnswer.bind(this, i));\r\n            }\r\n        }\r\n        \r\n    }\r\n    checkAnswer(i:number){\r\n        this.processCorrect(i);\r\n    }\r\n    processCorrect(i:number){\r\n        this.listAnswer[i].active = true;\r\n        this.listAnswer[i].setScale(v3(0.2, 0.2, 0));\r\n        tween(this.listAnswer[i])\r\n        .to(1, {scale: v3(1.5, 1.5, 0)})\r\n        .start();\r\n\r\n        this.dem++;\r\n        if(this.dem==this.listAnswer.length) {\r\n            this.handleShowPopNext();\r\n        }  \r\n    }\r\n    handleShowPopNext(){\r\n        let ob = LocalDataManager.getObject(\"check\", {});\r\n        let checkDone = ob.science[this.levelNumber];\r\n        if(this.levelBarUI){\r\n            if(!checkDone) {\r\n                this.levelBarUI.handleProgress();\r\n                \r\n            }\r\n            ob.science[this.levelNumber+1] = true;\r\n            LocalDataManager.setObject(\"check\", ob);\r\n        }\r\n        this.canPlay = false;\r\n        this.fireWork.active = true;\r\n        //scaleAndHide(this.fireWork, v3(1, 1, 0), 3, this.showPopupNext);\r\n        tween(this.fireWork)\r\n        .to(3, {scale: v3(1, 1, 0)})\r\n        .call(()=>{\r\n            this.showPopupNext();\r\n        })\r\n        .call(()=>{\r\n            this.fireWork.active = false;\r\n        })\r\n        .start();\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    // active popup next\r\n    showPopupNext() {\r\n        log(\"check\", this.levelNumber);\r\n        VDScreenManager.instance.showPopupFromPrefabName(\"res/prefabs/popup/popup_next\", (popup: VDBasePopup) => {\r\n            let popupWin = popup as popup_next;\r\n            // dinh nghia finshedCallBack chua goi nÃ³\r\n            popupWin.finishedCallback = () => {\r\n                let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/comparison/level'+String(this.levelNumber+1), Prefab)!;\r\n                VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true); \r\n                log(' Just Closed Popup !!!');\r\n            }; \r\n        }, false, true, true);   \r\n    }\r\n}\r\n\r\n\r\n"]}