{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/science/level4_science.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","log","Graphics","v3","Color","v2","level_progress_bar","ccclass","property","level4_science","graphics","draw","listGraphics","startP","endP","startPosUI","endPosUI","drawOk","id","start","initGraphic","initDrawInstruction","initPoint","gPrefab","on","onTouchStart","bind","onTouchMove","onTouchEnd","area","addChild","getComponent","g","lineWidth","strokeColor","BLACK","push","p1","listDots","getWorldPosition","p2","out","inverseTransformPoint","x","y","moveTo","lineTo","stroke","pUIStart","checkPosition","pUIEnd","checkPositionSrc","checkPositionDes","startPosSrc","dx","Math","abs","dy","clearCurrentDraw","pDes","pop","clear","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, log, Gradient, Graphics, EventTouch, v3, Color, v2 } from 'cc';\r\nimport { level_progress_bar } from '../../transiton/level_progress_bar';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level4_science')\r\nexport class level4_science extends Component {\r\n    @property(level_progress_bar)\r\n    levelBarUI: level_progress_bar = null;\r\n    @property(Node)\r\n    level: Node = null;\r\n    @property(Prefab)\r\n    gPrefab: Prefab = null;\r\n    @property(Node)\r\n    area: Node = null;\r\n    @property(Node)\r\n    listDots: Node[] = [];\r\n\r\n    private graphics = null;\r\n    private draw: Node = null;\r\n    private listGraphics: Node[] = [];\r\n    private startP: Node = null;\r\n    private endP: Node = null;\r\n    private startPosUI = v2();\r\n    private endPosUI = v2();\r\n    private drawOk: boolean = false;\r\n    private id: number = 0;\r\n\r\n    start() {\r\n        this.initGraphic();\r\n        this.initDrawInstruction();\r\n        this.initPoint();\r\n    }\r\n    initGraphic(){\r\n        this.draw = instantiate(this.gPrefab);\r\n        this.draw.on('draw-start', this.onTouchStart.bind(this));\r\n        this.draw.on('draw-move', this.onTouchMove.bind(this));\r\n        this.draw.on('draw-end', this.onTouchEnd.bind(this));\r\n        this.area.addChild(this.draw);\r\n        this.graphics = this.draw.getComponent(Graphics);\r\n        let g = this.graphics;\r\n        g.lineWidth=10;\r\n        g.strokeColor = Color.BLACK;\r\n        this.listGraphics.push(this.draw);\r\n        log(\"check list init: \", this.listGraphics);\r\n    }\r\n    initDrawInstruction(){\r\n        // ve tu 1->9\r\n        let p1 = this.listDots[0].getWorldPosition();\r\n        let p2 = this.listDots[8].getWorldPosition();\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(p1.x, p1.y, 0));\r\n        let g = this.graphics;\r\n        g.moveTo(out.x, out.y);\r\n        this.area.inverseTransformPoint(out, v3(p2.x, p2.y, 0));\r\n        g.lineTo(out.x, out.y);\r\n        g.stroke();\r\n        // ve tu 2-> 10\r\n        p1 = this.listDots[1].getWorldPosition();\r\n        p2 = this.listDots[9].getWorldPosition();\r\n        out = v3();\r\n        this.area.inverseTransformPoint(out, v3(p1.x, p1.y, 0));\r\n        g.moveTo(out.x, out.y);\r\n        this.area.inverseTransformPoint(out, v3(p2.x, p2.y, 0));\r\n        g.lineTo(out.x, out.y);\r\n        g.stroke(); \r\n    }\r\n    \r\n    initPoint(){\r\n        this.startP = this.listDots[0];\r\n        this.endP = this.listDots[1];\r\n    }\r\n    onTouchStart(pUIStart){\r\n        this.startPosUI = v2(pUIStart.x, pUIStart.y);\r\n    }\r\n\r\n    onTouchMove(checkPosition){\r\n    }\r\n    \r\n    onTouchEnd(pUIEnd){\r\n        if(this.checkPositionSrc()) {\r\n            this.endPosUI = v2(pUIEnd.x, pUIEnd.y);\r\n            this.checkPositionDes();\r\n        }\r\n    }\r\n    checkPositionSrc(){\r\n        log(\"compare: \", this.startPosUI, this.startP.getWorldPosition());\r\n        let startPosSrc = this.startP.getWorldPosition();\r\n        let dx = Math.abs(startPosSrc.x-this.startPosUI.x);\r\n        let dy = Math.abs(startPosSrc.y-this.startPosUI.y);\r\n        if(dx>40 || dy>40){\r\n            //\r\n            log(\"check list end before remove: \", this.listGraphics);\r\n            this.clearCurrentDraw();\r\n            return false;\r\n        }\r\n        this.initGraphic();\r\n        return true; \r\n    }\r\n    checkPositionDes(){\r\n        let pDes = this.endP.getWorldPosition();\r\n        let dx = Math.abs(this.endPosUI.x-pDes.x);\r\n        let dy = Math.abs(this.endPosUI.y-pDes.y);\r\n        if(dx>40 || dy>40){\r\n            this.clearCurrentDraw();\r\n            return false;\r\n        }\r\n        this.id++;\r\n        this.startP = this.listDots[this.id];\r\n        this.endP = this.listDots[this.id+1];\r\n        return true; \r\n    }\r\n\r\n    clearCurrentDraw(){\r\n        let g = this.listGraphics.pop();\r\n        g.getComponent(Graphics).clear();\r\n        this.initGraphic();\r\n        log(\"check list end after remove: \", this.listGraphics);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}