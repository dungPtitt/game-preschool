{"version":3,"sources":["file:///C:/Users/Admin/Downloads/Telegram%20Desktop/FrameworkCocos/FrameworkCocos/assets/vd-games/pvp-domino/script/screens/dm_PlayScreen2.ts"],"names":["instantiate","sp","Label","log","Prefab","_decorator","Component","VDAudioManager","VDScreenManager","ccclass","property","dm_PlayScreen2","isMusicPause","onClickBtnNext","pfFxCloud","instance","assetBundle","get","nodeCloud","showEffect","spineCloud","getComponent","Skeleton","entry","setAnimation","setTrackCompleteListener","x","ev","removeAllEffects","setTrackEventListener","data","name","play_screen","pushScreen","screen","onClickBtnPrevious","popScreen","onClickPlayBGM","playBGM","onClickPauseBGM","isMutingMusic","lbPauseResumeMusic","string","onClickPlayClip","playClip","onClickStopClip","stopClip","onClickPlayEffect","playEffect","onClickStopEffect","stopEffectByName"],"mappings":"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","sourcesContent":["import { instantiate, sp } from 'cc';\nimport { Label, log, Prefab } from 'cc';\nimport { _decorator, Component, Node } from 'cc';\nimport { VDAudioManager } from '../../../../vd-framework/audio/VDAudioManager';\nimport VDBaseScreen from '../../../../vd-framework/ui/VDBaseScreen';\nimport VDScreenManager from '../../../../vd-framework/ui/VDScreenManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('dm_PlayScreen2')\nexport class dm_PlayScreen2 extends Component {\n\n    @property(Label)\n    lbPauseResumeMusic: Label = null!;\n\n    isMusicPause: boolean = false;\n\n    onClickBtnNext() {\n        log(`onClickBtnNext`);\n\n        let pfFxCloud = VDScreenManager.instance.assetBundle.get('res/prefabs/transition/transition_cloud', Prefab)!;\n        let nodeCloud = instantiate(pfFxCloud);\n        VDScreenManager.instance.showEffect(nodeCloud);\n\n        let spineCloud = nodeCloud.getComponent(sp.Skeleton);\n        let entry = spineCloud.setAnimation(0, 'transition_to_lucky', false);\n\n        spineCloud.setTrackCompleteListener(entry, (x: any, ev: any) => {\n            VDScreenManager.instance.removeAllEffects();\n        });\n\n        spineCloud.setTrackEventListener(entry, (x: any, ev: any) => {\n            if (ev && ev.data && ev.data.name && ev.data.name == 'transition') {\n                let play_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/play_screen_3', Prefab)!;\n                VDScreenManager.instance.pushScreen(play_screen, (screen: VDBaseScreen) => { }, false);\n            }\n        });\n    }\n\n    onClickBtnPrevious() {\n        log(`onClickBtnPrevious`);\n        VDScreenManager.instance.popScreen(true);\n    }\n\n    //#region BGM\n    onClickPlayBGM() {\n        VDAudioManager.instance.playBGM('dm_bgm_main');\n    }\n\n    onClickPauseBGM() {\n        this.isMusicPause = !this.isMusicPause;\n        VDAudioManager.instance.isMutingMusic = this.isMusicPause;\n        if (this.lbPauseResumeMusic) this.lbPauseResumeMusic.string = this.isMusicPause ? 'Resume' : 'Pause';\n    }\n    //#endregion\n\n    //#region Clip\n    onClickPlayClip() {\n        VDAudioManager.instance.playClip('dm_bgm_win', false);\n    }\n\n    onClickStopClip() {\n        VDAudioManager.instance.stopClip();\n    }\n    //#endregion\n\n    //#region Effect\n    onClickPlayEffect() {\n        VDAudioManager.instance.playEffect('dm_sfx_appear', false);\n    }\n\n    onClickStopEffect() {\n        VDAudioManager.instance.stopEffectByName('dm_sfx_appear');\n    }\n    //#endregion\n}\n\n"]}