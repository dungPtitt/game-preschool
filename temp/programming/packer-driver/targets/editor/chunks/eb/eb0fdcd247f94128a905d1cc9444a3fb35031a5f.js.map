{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-framework/async-task/VDTimelineTaskMgr.ts"],"names":["VDTimelineTask","VDTimelineTaskMgr","ccclass","property","cc","_decorator","constructor","key","func","caller","args","delay","startingTime","started","isDelay","update","dt","length","concat","apply","cleanUp","getKey","Component","instance","_instance","_pool","_intervalId","_dt","_isRunning","_lastestTimeStamp","schedule","bind","macro","REPEAT_FOREVER","game","on","Game","EVENT_HIDE","_onHideGame","EVENT_SHOW","_onShowGame","destroy","unscheduleAllCallbacks","off","delta","performance","now","i","removeTaskByKey","splice","scheduleTask","updateFunc","overide","task","Date","push"],"mappings":"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","sourcesContent":["import * as cc from 'cc';\nconst { ccclass, property } = cc._decorator;\n\nexport class VDTimelineTask {\n    constructor(key: string, func: Function, caller: any | null, args: any[] | null, delay: number) {\n        this.key = key;\n        this.func = func;\n        this.caller = caller;\n        this.args = args;\n        this.delay = delay;\n    }\n    key: string;\n    func: Function | null;\n    caller: any;\n    args: any[] | null;\n    delay: number;\n    startingTime: number = 0;\n    started: boolean = false;\n\n    isDelay() {\n        return this.delay > 0;\n    }\n    /**\n    * update all task inside\n    * @param dt delta time in second\n    */\n    update(dt: number) {\n        let args: any[] = [dt];\n        if (this.delay > 0) {\n            this.delay -= dt;\n        }\n        if (this.delay <= 0) {\n            this.started = true;\n            if (this.args && this.args.length != 0) {\n                args = args.concat(this.args);\n            }\n            this.func?.apply(this.caller, args);\n        }\n    }\n\n    cleanUp() {\n        this.caller = null;\n        this.func = null;\n        this.args = null;\n    }\n\n    getKey() {\n        return this.key;\n    }\n}\n\n\nexport default class VDTimelineTaskMgr extends cc.Component {\n    private _pool: VDTimelineTask[] = [];\n    private _intervalId: number = -1;\n    private _dt: number = 0.025;\n    private _isRunning = true;\n    private _lastestTimeStamp: number = 0;\n\n    private static _instance: VDTimelineTaskMgr = null!;\n    public static get instance(): VDTimelineTaskMgr {\n        if (VDTimelineTaskMgr._instance == null) {\n            VDTimelineTaskMgr._instance = new VDTimelineTaskMgr();\n        }\n        return VDTimelineTaskMgr._instance;\n    }\n\n    constructor() {\n        super();\n        this.schedule(this.update.bind(this), 0, cc.macro.REPEAT_FOREVER, 0);\n        cc.game.on(cc.Game.EVENT_HIDE, this._onHideGame, this);\n        cc.game.on(cc.Game.EVENT_SHOW, this._onShowGame, this);\n    }\n\n    destroy() {\n        this.unscheduleAllCallbacks();\n        cc.game.off(cc.Game.EVENT_HIDE, this._onHideGame, this);\n        cc.game.off(cc.Game.EVENT_SHOW, this._onShowGame, this);\n\n        return super.destroy();\n    }\n\n    private _onShowGame() {\n        this._isRunning = true;\n        let delta = performance.now() - this._lastestTimeStamp;\n        this.update(delta);\n        this._lastestTimeStamp = 0;\n\n    }\n\n    private _onHideGame() {\n        this._isRunning = false;\n        this._lastestTimeStamp = performance.now();\n    }\n\n    update(dt: number) {\n        if (!this._isRunning || this._pool.length == 0) {\n            return;\n        }\n\n        for (let i = 0; i < this._pool.length; ++i) {\n            if (this._lastestTimeStamp > 0 && this._pool[i].started) {\n                this._pool[i].update(dt);\n            }\n            else {\n                this._pool[i].update(dt);\n            }\n        }\n    }\n\n    removeTaskByKey(key: string) {\n        for (let i = 0; i < this._pool.length; ++i) {\n            if (this._pool[i].getKey() && this._pool[i].getKey() === key) {\n                this._pool[i].cleanUp();\n                this._pool.splice(i, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    scheduleTask(key: string, updateFunc: Function, caller: any | null = null, args: any[] | null = null, overide: boolean = true, delay: number = 0) {\n        if (overide) {\n            for (let i = 0; i < this._pool.length; ++i) {\n                if (this._pool[i].getKey() && this._pool[i].getKey() === key) {\n                    this._pool[i].cleanUp();\n                    this._pool.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        let task = new VDTimelineTask(key, updateFunc, caller, args, delay);\n        task.startingTime = Date.now() + delay * 1000;\n        this._pool.push(task);\n    }\n\n    /**\n     * clean up all\n     */\n    cleanUp() {\n        for (var i = 0; i < this._pool.length; ++i) {\n            if (this._pool[i]) {\n                this._pool[i].cleanUp();\n            }\n        }\n        this._pool.splice(0, this._pool.length);\n    }\n}"]}