{"version":3,"sources":["file:///C:/Users/Admin/Downloads/Telegram%20Desktop/FrameworkCocos/FrameworkCocos/assets/vd-games/pvp-exam/script/ex_Scene.ts"],"names":["_decorator","Component","log","assetManager","VDScreenManager","ex_Config","ccclass","property","ex_Scence","onLoad","bundle","getBundle","GAME_NAME","node","addComponent","instance","assetBundle","setupCommon","load","Prefab","error","prefab","initWithRootScreen","screen","name","onDestroy","VDAudioManager","destroy","VDAsyncTaskMgr","stop"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,Y,OAAAA,Y;;AACpCC,MAAAA,e;;AACEC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;2BAGjBQ,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BP,SAD/B,CACyC;AACrCQ,QAAAA,MAAM,GAAG;AACLP,UAAAA,GAAG,CAAC,yBAAD,CAAH;AACA,cAAIQ,MAAM,GAAGP,YAAY,CAACQ,SAAb,CAAuB,YAAY;AAAA;AAAA,sCAAUC,SAA7C,CAAb;;AACA,cAAIF,MAAJ,EAAY;AACR,iBAAKG,IAAL,CAAUC,YAAV;AAAA;AAAA;AAEA;AAAA;AAAA,oDAAgBC,QAAhB,CAAyBC,WAAzB,GAAuCN,MAAvC;AACA;AAAA;AAAA,oDAAgBK,QAAhB,CAAyBE,WAAzB;AAEAP,YAAAA,MAAM,CAACQ,IAAP,CAAY,mCAAZ,EAAiDC,MAAjD,EAAyD,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxE,kBAAID,KAAJ,EAAW;AACPlB,gBAAAA,GAAG,CAAE,gBAAekB,KAAM,EAAvB,CAAH;AACH,eAFD,MAGK;AACDlB,gBAAAA,GAAG,CAAC,qBAAD,CAAH,CADC,CAED;;AACA;AAAA;AAAA,wDAAgBa,QAAhB,CAAyBO,kBAAzB,CAA4CD,MAA5C,EAAqDE,MAAD,IAAY;AAC5DrB,kBAAAA,GAAG,CAAC,wBAAwBqB,MAAM,CAACC,IAA/B,GAAsC,WAAvC,CAAH;AACH,iBAFD;AAGH;AACJ,aAXD;AAYH;AACJ;;AAEDC,QAAAA,SAAS,GAAG;AACRC,UAAAA,cAAc,CAACX,QAAf,CAAwBY,OAAxB;AACAC,UAAAA,cAAc,CAACb,QAAf,CAAwBc,IAAxB;AACH;;AA5BoC,O","sourcesContent":["import { _decorator, Component, Node, log, assetManager } from 'cc';\r\nimport VDScreenManager from '../../../vd-framework/ui/VDScreenManager';\r\nimport { ex_Config } from './common/ex_Config';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ex_Scence')\r\nexport class ex_Scence extends Component {\r\n    onLoad() {\r\n        log(\"@ dm_Scene: onLoad  !!!\");\r\n        let bundle = assetManager.getBundle(\"bundle_\" + ex_Config.GAME_NAME);\r\n        if (bundle) {\r\n            this.node.addComponent(VDScreenManager);\r\n\r\n            VDScreenManager.instance.assetBundle = bundle;\r\n            VDScreenManager.instance.setupCommon();\r\n\r\n            bundle.load(\"res/prefabs/screen/loading_screen\", Prefab, (error, prefab) => {\r\n                if (error) {\r\n                    log(`bundle.load: ${error}`);\r\n                }\r\n                else {\r\n                    log(\"load loading sucess\")\r\n                    // VDScreenManager.instance.initWithRootScreen(prefab);\r\n                    VDScreenManager.instance.initWithRootScreen(prefab, (screen) => {\r\n                        log('initWithRootScreen ' + screen.name + ' success!');\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        VDAudioManager.instance.destroy();\r\n        VDAsyncTaskMgr.instance.stop();\r\n    }\r\n}\r\n\r\n\r\n"]}