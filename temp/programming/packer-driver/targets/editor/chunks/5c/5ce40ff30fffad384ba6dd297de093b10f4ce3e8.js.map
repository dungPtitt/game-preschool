{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/match/level1_match.ts"],"names":["_decorator","Component","Node","Prefab","log","VDScreenManager","ccclass","property","level1_match","type","canPick","onClickBtnNext","level2_screen","instance","assetBundle","get","pushScreen","screen","onClickBtnBack","popScreen","onClickInstruction","start","startPlay","i","itemQuestions","length","on","check_startPositon","bind","checkPosition","itemMoving","j","itemAnswers","answerP","getWorldPosition","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,G,OAAAA,G;;AAEvCC,MAAAA,e;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;8BAGjBQ,Y,WADZF,OAAO,CAAC,cAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,UAERK,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,2BALb,MACaM,YADb,SACkCP,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAOhCS,OAPgC,GAOtB,IAPsB;AAAA;;AASxCC,QAAAA,cAAc,GAAG;AACb,cAAIC,aAAa,GAAG;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,WAAzB,CAAqCC,GAArC,CAAyC,iCAAzC,EAA4EZ,MAA5E,CAApB;AACA;AAAA;AAAA,kDAAgBU,QAAhB,CAAyBG,UAAzB,CAAoCJ,aAApC,EAAoDK,MAAD,IAA0B,CAAG,CAAhF,EAAkF,IAAlF;AACH;;AACDC,QAAAA,cAAc,GAAG;AACb;AAAA;AAAA,kDAAgBL,QAAhB,CAAyBM,SAAzB,CAAmC,IAAnC;AACH;;AACDC,QAAAA,kBAAkB,GAAG;AACjBhB,UAAAA,GAAG,CAAC,mBAAD,CAAH;AAEH;;AACDiB,QAAAA,KAAK,GAAG;AACJ,eAAKC,SAAL;AACH;;AAEDA,QAAAA,SAAS,GAAE;AACP,cAAG,KAAKZ,OAAR,EAAiB;AACb,iBAAI,IAAIa,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKC,aAAL,CAAmBC,MAAlC,EAA0CF,CAAC,EAA3C,EAA8C;AAC1C,mBAAKC,aAAL,CAAmBD,CAAnB,EAAsBG,EAAtB,CAAyB,YAAzB,EAAuC,KAAKC,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAAvC;AACA,mBAAKJ,aAAL,CAAmBD,CAAnB,EAAsBG,EAAtB,CAAyB,aAAzB,EAAwC,KAAKG,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BL,CAA9B,CAAxC;AACH;AACJ;AACJ;;AACDI,QAAAA,kBAAkB,GAAE;AAChBvB,UAAAA,GAAG,CAAC,aAAD,CAAH;AACH;;AAEDyB,QAAAA,aAAa,CAACC,UAAD,EAAmBP,CAAnB,EAA6B;AACtCnB,UAAAA,GAAG,CAAC,WAAD,EAAa0B,UAAb,EAAyBP,CAAzB,CAAH,CADsC,CAEtC;;AACA,eAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,KAAKC,WAAL,CAAiBP,MAAlC,EAA0CM,CAAC,EAA3C,EAA8C;AAC1C,gBAAIE,OAAO,GAAG,KAAKD,WAAL,CAAiBT,CAAjB,EAAoBW,gBAApB,EAAd,CAD0C,CAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAvDuC,O;;;;;iBAGhB,E;;;;;;;iBAEF,E","sourcesContent":["import { _decorator, Component, Node, Prefab, log } from 'cc';\r\nimport VDBaseScreen from '../../../../../vd-framework/ui/VDBaseScreen';\r\nimport VDScreenManager from '../../../../../vd-framework/ui/VDScreenManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_match')\r\nexport class level1_match extends Component {\r\n\r\n    @property({type: Node})\r\n    itemQuestions: Node[] = [];\r\n    @property({type: Node})\r\n    itemAnswers: Node[] = [];\r\n\r\n    private canPick = true;\r\n\r\n    onClickBtnNext() {\r\n        let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/match/level2', Prefab)!;\r\n        VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true);\r\n    }\r\n    onClickBtnBack() {\r\n        VDScreenManager.instance.popScreen(true);\r\n    }\r\n    onClickInstruction() {\r\n        log(\"start instruction\")\r\n\r\n    }\r\n    start() {\r\n        this.startPlay();\r\n    }\r\n\r\n    startPlay(){\r\n        if(this.canPick) {\r\n            for(let i=0; i<this.itemQuestions.length; i++){\r\n                this.itemQuestions[i].on(\"i-am-start\", this.check_startPositon.bind(this));\r\n                this.itemQuestions[i].on(\"i-am-moving\", this.checkPosition.bind(this, i));\r\n            }\r\n        }\r\n    }\r\n    check_startPositon(){\r\n        log(\"check start\");\r\n    }\r\n\r\n    checkPosition(itemMoving: Node, i: number){\r\n        log(\"check i: \",itemMoving, i);\r\n        // let questionP = itemMoving.getWorldPosition();\r\n        for(let j = 0; j<this.itemAnswers.length; j++){\r\n            let answerP = this.itemAnswers[i].getWorldPosition();\r\n            // let dx = Math.abs(answerP.x-questionP.x);\r\n            // let dy = Math.abs(answerP.y-questionP.y);\r\n            // if(dx<40 && dy<40){\r\n            //     if(i==j){\r\n            //         log(\"correct!\");\r\n            //     }else{\r\n            //         log(\"wrong!\")\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}