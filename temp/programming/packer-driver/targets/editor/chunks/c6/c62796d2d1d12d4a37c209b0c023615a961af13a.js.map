{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/comparison/level1_comp.ts"],"names":["_decorator","Component","Node","Sprite","Color","log","tween","v3","Label","VDScreenManager","ScaleFactor","scaleTo","TimeFactor","level_progress_bar","LocalDataManager","scaleAndHide","ccclass","property","level1_comp","type","progressLevelBar","canPlay","levelNumber","isShowPopup","onClickInstruction","levelBarUI","handleProgress","answer","BIG_BY_2","SMALL_BY_0_5","MEDIUM","toDefault","bind","onClickBtnNext","event","data","showPopupNext","onClickBack","instance","popScreen","start","lev","level","getComponent","string","Number","startPlay","nextBtn","active","i","items","length","on","EventType","TOUCH_END","checkAnswer","processCorrect","processWrong","ob","getObject","checkDone","comparison","setObject","fireWork","smile","setScale","sprite","color","cry","to","scale","update","deltaTime","showPopupFromPrefabName","popup","popupWin","finishedCallback"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Sprite, Color, log, Prefab, tween, v3, Label, Vec3 } from 'cc';\r\nimport VDBaseScreen from '../../../../../vd-framework/ui/VDBaseScreen';\r\nimport VDScreenManager from '../../../../../vd-framework/ui/VDScreenManager';\r\nimport { ScaleFactor, scaleTo, TimeFactor } from '../../transiton/Transformation';\r\n\r\nimport { level_progress_bar } from '../../transiton/level_progress_bar';\r\nimport LocalDataManager from '../../common/LocalDataManager';\r\nimport { handleFirework } from '../../common/handleFirework';\r\nimport { scaleAndHide } from '../../transiton/Transformation';\r\nimport VDBasePopup from '../../../../../vd-framework/ui/VDBasePopup';\r\nimport { popup_next } from '../../popups/popup_next';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_comp')\r\nexport class level1_comp extends Component {\r\n    @property({type: Node})\r\n    answer: Node = null;\r\n    @property({type: Node})\r\n    pointer: Node = null;\r\n    @property({type: Node})\r\n    smile: Node = null;\r\n    @property({type: Node})\r\n    cry: Node = null;\r\n    @property({type: Node})\r\n    nextBtn: Node = null;\r\n    @property({type: Node})\r\n    fireWork: Node = null;\r\n\r\n    @property(level_progress_bar)\r\n    levelBarUI: level_progress_bar = null;\r\n    // mac dinh item[0] chua dap an\r\n    @property({type: Node})\r\n    items: Node[] = [];\r\n\r\n    progressLevelBar?: level_progress_bar;\r\n    private canPlay = true;\r\n    @property(Node)\r\n    level: Node = null;\r\n\r\n    public levelNumber = 1;\r\n    public isShowPopup = false;\r\n\r\n    onClickInstruction() {\r\n        if(this.levelBarUI){\r\n            this.levelBarUI.handleProgress();\r\n        }\r\n        // this.pointer.active = true;\r\n        // let p = this.answer.getWorldPosition();\r\n        // this.pointer.setWorldPosition(p.x, p.y, 0);\r\n        // let sprite =  this.answer.getComponent(Sprite);\r\n        // sprite.color = new Color(67, 14, 180); \r\n        scaleTo(this.answer, ScaleFactor.BIG_BY_2, ScaleFactor.SMALL_BY_0_5, TimeFactor.MEDIUM, this.toDefault.bind(this));\r\n    }\r\n\r\n    onClickBtnNext(event: TouchEvent, data: any) {\r\n        this.showPopupNext();\r\n        log(\"check number: \", data)\r\n        // let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/comparison/level'+String(data), Prefab)!;\r\n        // VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true); \r\n    }\r\n\r\n    onClickBack() {\r\n        //cach 1\r\n        // log(`onClickBtnPrevious`);\r\n        VDScreenManager.instance.popScreen(true);\r\n    }\r\n\r\n    toDefault() {\r\n        // let sprite =  this.answer.getComponent(Sprite);\r\n        // sprite.color = new Color(204, 204, 204);\r\n        // this.pointer.active = false;\r\n    }\r\n    start() {\r\n        let lev = this.level.getComponent(Label).string;\r\n        this.levelNumber = Number(lev);\r\n        // let checkDone = LocalDataManager.getObject(\"check\", {});\r\n        // let check = checkDone.comparison[this.levelNumber];\r\n        // this.canPlay = !check;\r\n        // log(\"check\", check);\r\n        \r\n        this.startPlay();\r\n    }\r\n\r\n    startPlay() { \r\n        this.isShowPopup = false;\r\n        if(!this.canPlay){\r\n            this.nextBtn.active = true;\r\n        }else {\r\n            for(let i=0; i<this.items.length; i++) {\r\n                this.items[i].on(Node.EventType.TOUCH_END, this.checkAnswer.bind(this, i));\r\n            }\r\n        }\r\n        \r\n    }\r\n    checkAnswer(i: number){\r\n        if(this.canPlay){\r\n            if(i==0) {\r\n                this.processCorrect();\r\n            }else {\r\n                this.processWrong();\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n    processCorrect(){\r\n        let ob = LocalDataManager.getObject(\"check\", {});\r\n        let checkDone = ob.comparison[this.levelNumber];\r\n        if(this.levelBarUI){\r\n            if(!checkDone) {\r\n                this.levelBarUI.handleProgress();\r\n            }\r\n        }\r\n        ob.comparison[this.levelNumber] = true;\r\n        LocalDataManager.setObject(\"check\", ob);\r\n        this.canPlay = false;\r\n        \r\n        //hieu ung thang\r\n        // this.fireWorkL.startPlay();\r\n        // this.fireWorkR.startPlay();\r\n        this.fireWork.active = true;\r\n        scaleAndHide(this.fireWork, v3(1, 1, 0), 3, this.showPopupNext);\r\n        this.smile.active = true;\r\n        this.smile.setScale( v3(0.1, 0.1, 0));\r\n        scaleAndHide(this.smile, v3(0.6, 0.6, 0), 2);\r\n        let sprite =  this.answer.getComponent(Sprite);\r\n        sprite.color = new Color(67, 14, 180);\r\n        this.nextBtn.active = true;\r\n    }\r\n    processWrong(){\r\n        this.cry.active = true;\r\n        tween(this.cry)\r\n        .to(1, {scale: v3(0.08, 0.08, 0)})\r\n        .to(0.2, {scale: v3(0, 0, 0)})\r\n        .start();\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    // active popup next\r\n    showPopupNext() {\r\n        log(\"popupnext\", this.isShowPopup);\r\n        VDScreenManager.instance.showPopupFromPrefabName(\"res/prefabs/popup/popup_next\", (popup: VDBasePopup) => {\r\n            let popupWin = popup as popup_next;\r\n            // this.popupNext = true;\r\n            log(\"check popup\", popupWin)\r\n            // this.popupNext = popupWin;\r\n            // dinh nghia finshedCallBack chua goi nó\r\n            popupWin.finishedCallback = () => {\r\n                // let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/comparison/level2', Prefab)!;\r\n                // VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true); \r\n                log(' Just Closed Popup !!!');\r\n            };\r\n            // let lev = String(this.levelNumber+1);\r\n            \r\n            \r\n        }, false, true, false);\r\n        // if(!this.popupNext) {\r\n            \r\n        // }\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}