{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/match/level1_match.ts"],"names":["_decorator","Component","Node","Prefab","log","Sprite","tween","v3","Label","VDScreenManager","LocalDataManager","level_progress_bar","ccclass","property","level1_match","type","canPick","levelNumber","sum","onClickBtnNext","event","data","level2_screen","instance","assetBundle","get","String","pushScreen","screen","onClickBtnBack","popToRootScreen","onClickInstruction","start","lev","level","getComponent","string","Number","startPlay","i","itemQuestions","length","on","check_startPositon","bind","p","getWorldPosition","checkPosition","questionP","j","itemAnswers","answerP","dx","Math","abs","x","dy","y","active","spriteA","spriteQ","color","handleCorrect","obCheck","getObject","currentLevel","match","levelBarUI","handleProgress","setObject","handleShowPopupNext","fireWork","setScale","to","scale","call","showPopupNext","showPopupFromPrefabName","popup","popupWin","finishedCallback","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, log, Sprite, tween, v3, Label } from 'cc';\r\nimport VDBasePopup from '../../../../../vd-framework/ui/VDBasePopup';\r\nimport VDBaseScreen from '../../../../../vd-framework/ui/VDBaseScreen';\r\nimport VDScreenManager from '../../../../../vd-framework/ui/VDScreenManager';\r\nimport LocalDataManager from '../../common/LocalDataManager';\r\nimport { popup_next } from '../../popups/popup_next';\r\nimport { level_progress_bar } from '../../transiton/level_progress_bar';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_match')\r\nexport class level1_match extends Component {\r\n\r\n    @property({type: Node})\r\n    itemQuestions: Node[] = [];\r\n    @property({type: Node})\r\n    itemAnswers: Node[] = [];\r\n    @property({type: Node})\r\n    nextBtn: Node = null;\r\n    \r\n    @property(level_progress_bar)\r\n    levelBarUI: level_progress_bar = null;\r\n    @property({type: Node})\r\n    level: Node = null;\r\n    @property({type: Node})\r\n    fireWork: Node = null;\r\n\r\n    private canPick = true;\r\n    private levelNumber = 1;\r\n    private sum = 0;\r\n\r\n    onClickBtnNext(event: TouchEvent, data: any) {\r\n        log(\"check number: \", data)\r\n        let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/match/level'+String(data), Prefab)!;\r\n        VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true);\r\n        //\r\n    }\r\n    onClickBtnBack() {\r\n        VDScreenManager.instance.popToRootScreen(true);\r\n    }\r\n    onClickInstruction() {\r\n        log(\"start instruction\")\r\n    }\r\n    start() {\r\n        let lev = this.level.getComponent(Label).string;\r\n        this.levelNumber = Number(lev);\r\n        this.startPlay();\r\n    }\r\n\r\n    startPlay(){\r\n        if(this.canPick) {\r\n            for(let i=0; i<this.itemQuestions.length; i++){\r\n                this.itemQuestions[i].on(\"i-am-start\", this.check_startPositon.bind(this));\r\n                let p = this.itemQuestions[i].getWorldPosition();\r\n                this.itemQuestions[i].on(\"i-am-moving\", this.checkPosition.bind(this, i));\r\n            }\r\n        }\r\n    }\r\n    check_startPositon(){\r\n        log(\"check start\");\r\n    }\r\n\r\n    checkPosition(i: number){\r\n        let questionP = this.itemQuestions[i].getWorldPosition();\r\n        // log(\"check i: \",i);\r\n        \r\n        for(let j = 0; j<this.itemAnswers.length; j++){\r\n            let answerP = this.itemAnswers[j].getWorldPosition();\r\n            let dx = Math.abs(answerP.x-questionP.x);\r\n            let dy = Math.abs(answerP.y-questionP.y);\r\n            if(dx<40 && dy<40){\r\n                if(i==j){\r\n                    this.itemQuestions[i].active = false;\r\n                    let spriteA = this.itemAnswers[i].getComponent(Sprite);\r\n                    let spriteQ = this.itemQuestions[i].getComponent(Sprite);\r\n                    spriteA.color = spriteQ.color;\r\n                    this.sum++;\r\n                    if(this.sum == 3) {\r\n                        this.handleCorrect();\r\n                    }\r\n                }else{\r\n                    // xu ly khi keo sai\r\n                    log(\"wrong!\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCorrect(){\r\n        log(\"correct!\");\r\n        //cong kinh nghiem\r\n        \r\n        let obCheck = LocalDataManager.getObject(\"check\", {});\r\n        let currentLevel = obCheck.match[this.levelNumber];\r\n        if(!currentLevel) {\r\n            this.levelBarUI.handleProgress();\r\n            log(\"check level \", this.levelNumber+1);\r\n            obCheck.match[this.levelNumber+1] = true;\r\n            LocalDataManager.setObject(\"check\", obCheck);\r\n        }\r\n        \r\n        this.handleShowPopupNext();\r\n        // this.nextBtn.active = true;\r\n    }\r\n    handleShowPopupNext(){\r\n        this.fireWork.active = true;\r\n        this.fireWork.setScale(v3(0.1, 0.1, 0));\r\n        tween(this.fireWork)\r\n        .to(3, {scale: v3(1, 1, 0)})\r\n        .call(()=> {\r\n            this.showPopupNext();\r\n        })\r\n        .call(()=>{\r\n            this.fireWork.active = false;\r\n        })\r\n        .start();\r\n    }\r\n    showPopupNext(){\r\n        log(\"check\", this.levelNumber);\r\n        VDScreenManager.instance.showPopupFromPrefabName(\"res/prefabs/popup/popup_next\", (popup: VDBasePopup) => {\r\n            let popupWin = popup as popup_next;\r\n            // dinh nghia finshedCallBack chua goi nó\r\n            popupWin.finishedCallback = () => {\r\n                let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/match/level'+String(this.levelNumber+1), Prefab)!;\r\n                VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true); \r\n                log(' Just Closed Popup !!!');\r\n            };\r\n        }, false, true, true);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}