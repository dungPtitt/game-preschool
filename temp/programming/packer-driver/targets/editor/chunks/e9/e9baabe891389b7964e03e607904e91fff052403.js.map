{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-framework/ui/VDTableView.ts"],"names":["VDScrollView","VDScrollDirection","VDTableCell","VDTableViewFillOrder","VDTableViewInteractionMode","ccclass","property","cc","_decorator","VDTableView","type","Enum","CCBoolean","CCInteger","Prefab","_cellSize","Size","ZERO","_cellAnchor","v2","_indices","Set","_cellsUsed","_cellsFreed","_rows","_cols","_realContentSize","_lastestCellCount","_selectedIndices","_tableViewDelegate","_dataSource","_isUsedCellsDirty","_highlightedIndex","_touchingIndex","_highlightedTouchObj","_startIdx","_endIdx","_mouseWheelEventElapsedTime","_stopMouseWheel","cellSize","value","rows","cols","selectedIndex","length","selectedIndices","delegate","dataSource","cellCacheKey","tableCell","data","name","onLoad","cacheKey","cache","_cellPoolCache","NodePool","tableCellSize","size","getComponent","UITransform","width","getScale","x","height","y","tableCellAnchor","anchorPoint","content","anchorX","anchorY","zoomScaleEnabled","direction","BOTH","VERTICAL","onEnable","interactionMode","NONE","on","Node","EventType","TOUCH_START","_onTableTouchBegan","TOUCH_MOVE","_onTableTouchMove","TOUCH_END","_onTableTouchEnded","TOUCH_CANCEL","_onTableTouchCancelled","MOUSE_WHEEL","_onMouseWheel","node","_onViewSizeChanged","_updateContentSize","onDisable","off","_onShowGame","_handleCancelLogicForTableInteraction","start","cellCount","numberOfCellsInTableView","reloadData","scrollToLeftTop","scrollViewDidScroll","event","captureListeners","enabledInHierarchy","_hasNestedViewGroup","deltaMove","Vec2","wheelPrecision","scrollY","getScrollY","Math","abs","EPSILON","set","HORIZONTAL","oldPosition","position","newPosition","setContentPosition","_dragging","_dragBeganPosition","_delegate","scrollViewWillBeginDragging","_gatherTouchMove","_clearAutoScrollData","schedule","_checkMouseWheel","NaN","_stopPropagationIfTargetIsMe","dt","maxElapsedTime","unschedule","touch","_handlePressLogicForTableInteraction","touchEnabled","stopPropagation","_handleMoveLogicForTableInteraction","_handleReleaseLogicForTableInteraction","clearSelection","splice","localTouch3D","convertToNodeSpaceAR","v3","getUILocation","localTouch","index","_indexFromOffset","cell","cellAtIndex","shouldHighlight","tableCellShouldHighlight","_setHighlightedForCell","contenPos","subtract","_beginContentPosition","getBoundingBoxToWorld","contains","getLocation","tIndex","delta","clone","getStartLocation","_onContentClick","_setSelectedForCell","selected","forceSelected","cellComp","setSelected","highlighted","forceHighlighted","setHighlighted","selectCellAtIndex","CLICK","indexOf","tableCellShouldSelect","SINGLE_SELECTION","deselectCellAtIndex","push","tableCellDidSelected","localIndex","tableCellWillDeselected","tableCellClicked","curIndex","pop","curCell","tableClickOnSelectedCell","MULTIPLE_SELECTION","getStartIndex","startIdx","offsetMinX","offsetMaxY","getEndIndex","dX","dY","endIdx","scrollToIndex","animated","offset","_offsetFromIndex","scrollTo","_updateCellCount","scrollView","countOfItems","sort","a","b","parseInt","maxIdx","idx","_moveCellOutOfSight","i","has","updateCellAtIndex","tableCellAtIndex","_setIndexForCell","_addCellIfNecessary","parent","addChild","add","_isOnLoadCalled","tableCellWillRecycle","put","removeChild","clear","dequeueCell","instantiate","get","cellNum","idxX","floor","idxY","fillOrder","LEFT_TO_RIGHT__TOP_TO_BOTTOM","delete","setPosition","toString","_updateGridData","cellsCount","min","max","ceil","maxWidth","maxHeight","contentSize","equals","setContentSize","_recalculateBoundary"],"mappings":"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","sourcesContent":["import * as cc from 'cc';\n\nimport VDScrollView, { VDScrollViewDelegate, VDScrollDirection } from \"./VDScrollView\";\nimport VDTableCell from \"./VDTableCell\";\n\nexport enum VDTableViewFillOrder {\n    LEFT_TO_RIGHT__TOP_TO_BOTTOM = 0,\n    TOP_TO_BOTTOM__LEFT_TO_RIGHT = 1\n}\n\nexport enum VDTableViewInteractionMode {\n    NONE,\n    CLICK,\n    SINGLE_SELECTION,\n    MULTIPLE_SELECTION\n}\n\nconst { ccclass, property } = cc._decorator;\n\nexport interface VDTableViewDelegate extends VDScrollViewDelegate {\n    tableCellClicked?(tableView: VDTableView, cell: cc.Node, idx: number): void;\n\n    tableCellDidSelected?(tableView: VDTableView, idx: number): void;\n\n    tableCellWillDeselected?(tableView: VDTableView, idx: number): void;\n\n    tableCellWillRecycle?(tableView: VDTableView, cell: cc.Node, idx: number): void;\n\n    tableCellShouldHighlight?(tableView: VDTableView, idx: number): boolean;\n\n    tableCellDidUnhighlight?(tableView: VDTableView, idx: number): void;\n\n    tableCellDidHighlight?(tableView: VDTableView, idx: number): void;\n\n    tableCellShouldSelect?(tableView: VDTableView, idx: number): boolean;\n\n    tableClickOnSelectedCell?(tableView: VDTableView, idx: number): void;\n}\n\nexport interface VDTableViewDataSource {\n    numberOfCellsInTableView(tableView: VDTableView): number;\n    tableCellAtIndex(tableView: VDTableView, idx: number): cc.Node;\n    tableCellSize?(tableView: VDTableView): cc.Size;\n    tableCellAnchor?(tableView: VDTableView): cc.Vec2;\n}\n\n@ccclass\nexport default class VDTableView extends VDScrollView {\n    @property({\n        type: cc.Enum(VDTableViewFillOrder)\n    })\n    private fillOrder: VDTableViewFillOrder = VDTableViewFillOrder.LEFT_TO_RIGHT__TOP_TO_BOTTOM;\n\n    @property({\n        type: cc.Enum(VDTableViewInteractionMode)\n    })\n    private interactionMode: VDTableViewInteractionMode = VDTableViewInteractionMode.NONE;\n\n    @property(cc.CCBoolean)\n    cellPagingEnabled: Boolean = false;\n\n    @property(cc.CCInteger)\n    numberOfPagingCell: Number = 1;\n\n    @property(cc.Prefab)\n    tableCell: cc.Prefab = null!;\n\n    public get cellSize(): cc.Size {\n        return this._cellSize;\n    }\n\n    public set cellSize(value: cc.Size) {\n        this._cellSize = value;\n    }\n    private _cellSize: cc.Size = cc.Size.ZERO;\n    private _cellAnchor: cc.Vec2 = cc.v2(0.5, 0.5);\n    private _indices: Set<number> = new Set<number>();\n    private _cellsUsed: Array<cc.Node> = [];\n    private _cellsFreed: cc.NodePool = null!;\n\n    public get rows(): number {\n        return this._rows;\n    }\n    private _rows: number = 0;\n\n    public get cols(): number {\n        return this._cols;\n    }\n    private _cols: number = 0;\n    private _realContentSize: cc.Size = cc.Size.ZERO;\n\n    private _lastestCellCount: number = 0;\n\n    static _cellPoolCache: any = {};\n\n    public get selectedIndex(): number {\n        if (this._selectedIndices.length > 0) {\n            return this._selectedIndices[this._selectedIndices.length - 1];\n        } else {\n            return - 1;\n        }\n    }\n\n    public get selectedIndices(): Array<number> {\n        return this._selectedIndices;\n    }\n\n    private _selectedIndices: Array<number> = [];\n\n    public get delegate(): VDTableViewDelegate {\n        return this._tableViewDelegate;\n    }\n\n    public set delegate(value: VDTableViewDelegate) {\n        this._tableViewDelegate = value;\n    }\n\n    private _tableViewDelegate: VDTableViewDelegate = null!;\n\n    public get dataSource(): VDTableViewDataSource {\n        return this._dataSource;\n    }\n\n    public set dataSource(value: VDTableViewDataSource) {\n        this._dataSource = value;\n    }\n    private _dataSource: VDTableViewDataSource = null!;\n\n    private _isUsedCellsDirty: boolean = true;\n\n    private _highlightedIndex: number = -1;\n    private _touchingIndex: number = -1;\n    private _highlightedTouchObj: cc.Touch | null = null;\n\n    private _startIdx: number = 0;\n    private _endIdx: number = 0;\n    private _mouseWheelEventElapsedTime: number = 0;\n    private _stopMouseWheel: boolean = false;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    cellCacheKey(): string {\n        return this.tableCell.data.name;\n    }\n\n    onLoad() {\n        super.onLoad();\n        if (!this.tableCell) {\n            throw \"TableView must have a cell prefab reference\";\n        }\n        let cacheKey = this.cellCacheKey();\n        let cache = VDTableView._cellPoolCache[cacheKey];\n        if (!cache) {\n            cache = VDTableView._cellPoolCache[cacheKey] = new cc.NodePool(cacheKey + \"<TableCellPool>\");\n        }\n        this._cellsFreed = cache;\n\n        if (this._dataSource && this._dataSource.tableCellSize) {\n            this._cellSize = this._dataSource.tableCellSize(this);\n        } else {\n            this._cellSize = cc.size(this.tableCell.data.getComponent(cc.UITransform)!.width * this.tableCell.data.getScale().x,\n                this.tableCell.data.getComponent(cc.UITransform)!.height * this.tableCell.data.getScale().y);\n        }\n\n        if (this._dataSource && this._dataSource.tableCellAnchor) {\n            this._cellAnchor = this._dataSource.tableCellAnchor(this);\n        } else {\n            this._cellAnchor = this.tableCell.data.getComponent(cc.UITransform)!.anchorPoint;\n        }\n\n        this.content.getComponent(cc.UITransform)!.anchorX = 0;\n        this.content.getComponent(cc.UITransform)!.anchorY = 1;\n\n        this.zoomScaleEnabled = false;\n        if (this.direction == VDScrollDirection.BOTH) {\n            this.direction = VDScrollDirection.VERTICAL;\n        }\n    }\n\n    onEnable() {\n        super.onEnable();\n        if (this.interactionMode != VDTableViewInteractionMode.NONE) {\n            this.content.on(cc.Node.EventType.TOUCH_START, this._onTableTouchBegan, this);\n            this.content.on(cc.Node.EventType.TOUCH_MOVE, this._onTableTouchMove, this);\n            this.content.on(cc.Node.EventType.TOUCH_END, this._onTableTouchEnded, this);\n            this.content.on(cc.Node.EventType.TOUCH_CANCEL, this._onTableTouchCancelled, this);\n            this.content.on(cc.Node.EventType.MOUSE_WHEEL, this._onMouseWheel, this, true);\n\n        }\n\n        this.node.on('size-changed', this._onViewSizeChanged, this);\n        this._updateContentSize();\n    }\n\n    onDisable() {\n        super.onDisable();\n        if (this.interactionMode != VDTableViewInteractionMode.NONE) {\n            this.content.off(cc.Node.EventType.TOUCH_START, this._onTableTouchBegan, this);\n            this.content.off(cc.Node.EventType.TOUCH_MOVE, this._onTableTouchMove, this);\n            this.content.off(cc.Node.EventType.TOUCH_END, this._onTableTouchEnded, this);\n            this.content.off(cc.Node.EventType.TOUCH_CANCEL, this._onTableTouchCancelled, this);\n            this.content.off(cc.Node.EventType.MOUSE_WHEEL, this._onMouseWheel, this, true);\n\n        }\n        this.node.off('size-changed', this._onViewSizeChanged, this);\n    }\n\n    protected _onShowGame() {\n        super._onShowGame();\n        this._handleCancelLogicForTableInteraction(null);\n    }\n\n    start() {\n        let cellCount = this._dataSource.numberOfCellsInTableView(this);\n        if (this._lastestCellCount != cellCount) {\n            this.reloadData();\n        } else if (!this.scrollToLeftTop(false)) {\n            this.scrollViewDidScroll(this);\n        }\n    }\n\n    protected _onMouseWheel(event: cc.EventMouse, captureListeners?: Node[]) {\n        if (!this.enabledInHierarchy) {\n            return;\n        }\n\n        if (this._hasNestedViewGroup(event, captureListeners)) {\n            return;\n        }\n\n        const deltaMove = new cc.Vec2();\n        const wheelPrecision = -0.1;\n        const scrollY = event.getScrollY();\n        // cc.log(`_onMouseWheel: y = ${scrollY}`);\n        if (!this._stopMouseWheel && Math.abs(scrollY * wheelPrecision) < cc.EPSILON) {\n            return;\n        }\n        if (this.direction == VDScrollDirection.VERTICAL) {\n            deltaMove.set(0, scrollY * wheelPrecision);\n        } else if (this.direction == VDScrollDirection.HORIZONTAL) {\n            deltaMove.set(scrollY * wheelPrecision, 0);\n        }\n\n        let oldPosition = new cc.Vec2(this.content.position.x, this.content.position.y);\n        let newPosition = new cc.Vec2(this.content.position.x + deltaMove.x, this.content.position.y + deltaMove.y);\n        // cc.log(`[Tableview] _onMouseWheel: deltaY = ${scrollY} - ${oldPosition} - ${newPosition}`);\n        if (this.setContentPosition(newPosition)) {\n            if (!this._dragging) {\n                this._dragging = true;\n                this._dragBeganPosition = oldPosition;\n                if (this._delegate && this._delegate.scrollViewWillBeginDragging) {\n                    this._delegate.scrollViewWillBeginDragging(this);\n                }\n            }\n        }\n        this._gatherTouchMove(deltaMove);\n\n        this._mouseWheelEventElapsedTime = 0;\n\n        if (!this._stopMouseWheel) {\n            this._clearAutoScrollData();\n            this.schedule(this._checkMouseWheel, 1.0 / 60, NaN, 0);\n            this._stopMouseWheel = true;\n        }\n\n        this._stopPropagationIfTargetIsMe(event);\n    }\n\n    protected _checkMouseWheel(dt: number) {\n        const maxElapsedTime = 0.1;\n        this._mouseWheelEventElapsedTime += dt;\n\n        // mouse wheel event is ended\n        if (this._mouseWheelEventElapsedTime > maxElapsedTime) {\n            // cc.log(`[Tableview] _onMouseWheel: stopMouseWheel`);\n            this.unschedule(this._checkMouseWheel);\n            this._stopMouseWheel = false;\n        }\n    }\n\n    private _onTableTouchBegan(event: cc.EventTouch) {\n        // cc.log(`[TableView] _onTableTouchBegan ${event.touch?.getLocation()} - ${event.touch?.getLocationInView()} - ${event.touch?.getUILocation()}`);\n        if (!this.enabledInHierarchy) return;\n        event.touch && this._handlePressLogicForTableInteraction(event.touch);\n\n        this.touchEnabled && event.stopPropagation();\n    }\n\n    private _onTableTouchMove(event: cc.EventTouch) {\n        // cc.log(`[TableView] _onTableTouchMove `);\n        if (!this.enabledInHierarchy) return;\n        event.touch && this._handleMoveLogicForTableInteraction(event.touch);\n        this.touchEnabled && event.stopPropagation();\n    }\n\n    private _onTableTouchEnded(event: cc.EventTouch) {\n        // cc.log(`[TableView] _onTableTouchEnded ${event.touch?.getLocation()} - ${event.touch?.getLocationInView()} - ${event.touch?.getUILocation()}`);\n        if (!this.enabledInHierarchy) return;\n        event.touch && this._handleReleaseLogicForTableInteraction(event.touch);\n        this.touchEnabled && event.stopPropagation();\n    }\n\n    private _onTableTouchCancelled(event: cc.EventTouch) {\n        // cc.log(`[TableView] _onTableTouchCancelled `);\n        if (!this.enabledInHierarchy) return;\n        event.touch && this._handleCancelLogicForTableInteraction(event.touch);\n        this.touchEnabled && event.stopPropagation();\n    }\n\n    // protected _hasNestedViewGroup(event, captureListeners: any[]) {\n    //     if (this.interactionMode == BGTTableViewInteractionMode.CELL_DRAGGING) {\n    //         return false;\n    //     } else {\n    //         return super._hasNestedViewGroup(event, captureListeners);\n    //     }\n    // }\n\n    clearSelection() {\n        this._selectedIndices.splice(0, this._selectedIndices.length);\n    }\n\n    protected _handlePressLogicForTableInteraction(touch: cc.Touch) {\n        if (this.interactionMode == VDTableViewInteractionMode.NONE) {\n            return;\n        }\n        if (this._highlightedTouchObj == null && this._highlightedIndex < 0) {\n            let localTouch3D = this.content.getComponent(cc.UITransform)!.convertToNodeSpaceAR(cc.v3(touch.getUILocation().x, touch.getUILocation().y, 0));\n            let localTouch = cc.v2(localTouch3D.x, -localTouch3D.y);\n            // localTouch.y = this.content.getComponent(cc.UITransform)!.height - localTouch.y;\n            let index = this._indexFromOffset(localTouch);\n            if (index >= 0) {\n                let cell = this.cellAtIndex(index);\n                if (cell) {\n                    let shouldHighlight = (this._tableViewDelegate && this._tableViewDelegate.tableCellShouldHighlight) ? this._tableViewDelegate.tableCellShouldHighlight(this, index) : true;\n                    if (shouldHighlight) {\n                        this._setHighlightedForCell(cell, true);\n                    }\n                }\n                this._highlightedIndex = index;\n                this._touchingIndex = index;\n                this._highlightedTouchObj = touch;\n            }\n        }\n        else {\n            this._highlightedIndex = -1;\n            this._highlightedTouchObj = null;\n        }\n    }\n\n    protected _handleMoveLogicForTableInteraction(touch: cc.Touch) {\n        if (this.interactionMode == VDTableViewInteractionMode.NONE) {\n            return;\n        }\n        let contenPos = cc.v2(this.content.position.x, this.content.position.y);\n        let deltaMove = contenPos.subtract(this._beginContentPosition);\n\n        if (deltaMove.length() > 8) {\n            if (this._highlightedIndex >= 0) {\n                let index = this._highlightedIndex;\n                let cell = this.cellAtIndex(index);\n                if (cell) {\n                    this._setHighlightedForCell(cell, false);\n                }\n                this._highlightedIndex = -1;\n            }\n            this._touchingIndex = -1;\n\n        } else if (this._highlightedTouchObj == touch) {\n            if (this._highlightedIndex >= 0) {\n                let cell = this.cellAtIndex(this._highlightedIndex);\n                if (cell) {\n                    if (this.node.getComponent(cc.UITransform)!.getBoundingBoxToWorld().contains(touch.getLocation())) {\n                        let localTouch3D = this.content.getComponent(cc.UITransform)!.convertToNodeSpaceAR(cc.v3(touch.getUILocation().x, touch.getUILocation().y, 0));\n                        let localTouch = cc.v2(localTouch3D.x, -localTouch3D.y);\n                        // localTouch.y = this.content.getComponent(cc.UITransform)!.height - localTouch.y;\n                        let tIndex = this._indexFromOffset(localTouch);\n                        if (tIndex != this._highlightedIndex) {\n                            this._setHighlightedForCell(cell, false);\n                            this._highlightedIndex = -1;\n                        } else {\n                            let shouldHighlight = (this._tableViewDelegate && this._tableViewDelegate.tableCellShouldHighlight) ? this._tableViewDelegate.tableCellShouldHighlight(this, this._highlightedIndex) : true;\n                            if (shouldHighlight) {\n                                this._setHighlightedForCell(cell, true);\n                            }\n                        }\n                    } else {\n                        this._setHighlightedForCell(cell, false);\n                        this._highlightedIndex = -1;\n                    }\n                }\n            } else if (this._touchingIndex >= 0) {\n                let cell = this.cellAtIndex(this._touchingIndex);\n                if (cell) {\n                    if (this.node.getComponent(cc.UITransform)!.getBoundingBoxToWorld().contains(touch.getUILocation())) {\n                        let localTouch3D = this.content.getComponent(cc.UITransform)!.convertToNodeSpaceAR(cc.v3(touch.getUILocation().x, touch.getUILocation().y, 0));\n                        let localTouch = cc.v2(localTouch3D.x, -localTouch3D.y);\n                        // localTouch.y = this.content.getComponent(cc.UITransform)!.height - localTouch.y;\n                        let tIndex = this._indexFromOffset(localTouch);\n                        if (tIndex == this._touchingIndex) {\n                            let shouldHighlight = (this._tableViewDelegate && this._tableViewDelegate.tableCellShouldHighlight) ? this._tableViewDelegate.tableCellShouldHighlight(this, tIndex) : true;\n                            if (shouldHighlight) {\n                                this._highlightedIndex = this._touchingIndex;\n                                this._setHighlightedForCell(cell, true);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    protected _handleReleaseLogicForTableInteraction(touch: cc.Touch) {\n        if (this.interactionMode == VDTableViewInteractionMode.NONE) {\n            return;\n        }\n        if (this._highlightedTouchObj == touch) {\n            if (this._highlightedIndex >= 0) {\n                let cell = this.cellAtIndex(this._highlightedIndex);\n                if (cell) {\n                    this._setHighlightedForCell(cell, false);\n                }\n                this._highlightedIndex = -1;\n            }\n            this._touchingIndex = -1;\n            let delta = touch.getLocation().clone().subtract(touch.getStartLocation());\n            if (delta.length() <= 8) {\n                this._onContentClick(touch);\n            }\n            this._highlightedTouchObj = null;\n        }\n    }\n\n    protected _handleCancelLogicForTableInteraction(touch: cc.Touch | null) {\n        if (this.interactionMode == VDTableViewInteractionMode.NONE) {\n            return;\n        }\n        if (touch == null || this._highlightedTouchObj == touch) {\n            if (this._highlightedIndex >= 0) {\n                let cell = this.cellAtIndex(this._highlightedIndex);\n                if (cell) {\n                    this._setHighlightedForCell(cell, false);\n                }\n                this._highlightedIndex = -1;\n            }\n            this._touchingIndex = -1;\n            this._highlightedTouchObj = null;\n        }\n    }\n\n    private _setSelectedForCell(cell: cc.Node, selected: boolean, forceSelected: boolean = false) {\n        let cellComp = cell.getComponent(VDTableCell) as VDTableCell;\n        if (cellComp && (forceSelected || cellComp.selected != selected)) {\n            cellComp.setSelected(selected);\n        }\n    }\n\n    private _setHighlightedForCell(cell: cc.Node, highlighted: boolean, forceHighlighted: boolean = false) {\n        let cellComp = cell.getComponent(VDTableCell) as VDTableCell;\n        if (cellComp && (forceHighlighted || cellComp.highlighted != highlighted)) {\n            cellComp.setHighlighted(highlighted);\n        }\n    }\n\n    public selectCellAtIndex(index: number) {\n        if (index < 0 || index >= this._lastestCellCount) return;\n        if (this.interactionMode == VDTableViewInteractionMode.NONE ||\n            this.interactionMode == VDTableViewInteractionMode.CLICK ||\n            this._selectedIndices.indexOf(index) >= 0) return;\n\n        if (!this._tableViewDelegate || !this._tableViewDelegate.tableCellShouldSelect || this._tableViewDelegate.tableCellShouldSelect(this, index)) {\n\n            if (this.interactionMode == VDTableViewInteractionMode.SINGLE_SELECTION) {\n                if (this.selectedIndex != -1) {\n                    this.deselectCellAtIndex(this.selectedIndex);\n                }\n            }\n\n            this._selectedIndices.push(index);\n            let cell = this.cellAtIndex(index);\n            if (cell) { //cell is showing\n                this._setSelectedForCell(cell, true);\n            }\n            if (this._tableViewDelegate && this._tableViewDelegate.tableCellDidSelected) {\n                this._tableViewDelegate.tableCellDidSelected(this, index);\n            }\n        }\n    }\n\n    public deselectCellAtIndex(index: number) {\n        if (this.interactionMode == VDTableViewInteractionMode.NONE ||\n            this.interactionMode == VDTableViewInteractionMode.CLICK) return;\n\n        let localIndex = this._selectedIndices.indexOf(index);\n        if (localIndex < 0) return;\n        this._selectedIndices.splice(localIndex, 1);\n        if (this._tableViewDelegate && this._tableViewDelegate.tableCellWillDeselected) {\n            this._tableViewDelegate.tableCellWillDeselected(this, index);\n        }\n        let cell = this.cellAtIndex(index);\n        if (cell) { //cell is showing\n            this._setSelectedForCell(cell, false);\n        }\n    }\n\n    private _onContentClick(touch: cc.Touch) {\n        // cc.log(`_onContentClick `);\n        if (this.interactionMode != VDTableViewInteractionMode.NONE) {\n            let localTouch3D = this.content.getComponent(cc.UITransform)!.convertToNodeSpaceAR(cc.v3(touch.getUILocation().x, touch.getUILocation().y, 0));\n            let localTouch = cc.v2(localTouch3D.x, -localTouch3D.y);\n            let index = this._indexFromOffset(localTouch);\n            let cell = this.cellAtIndex(index);\n            if (cell) {\n                if (this.interactionMode == VDTableViewInteractionMode.CLICK) {\n                    if (this._tableViewDelegate && this._tableViewDelegate.tableCellClicked) {\n                        this._tableViewDelegate.tableCellClicked(this, cell, index);\n                    }\n                } else if (this.interactionMode == VDTableViewInteractionMode.SINGLE_SELECTION) {\n\n                    if (this._selectedIndices.length == 0) {\n                        if (!this._tableViewDelegate ||\n                            !this._tableViewDelegate.tableCellShouldSelect ||\n                            this._tableViewDelegate.tableCellShouldSelect(this, index)) {\n                            this._selectedIndices.push(index);\n                            this._setSelectedForCell(cell, true);\n                            if (this._tableViewDelegate && this._tableViewDelegate.tableCellDidSelected) {\n                                this._tableViewDelegate.tableCellDidSelected(this, index);\n                            }\n                        }\n\n                    } else {\n                        if (this._selectedIndices.length == 1) {\n                            let curIndex = this._selectedIndices[0];\n                            if (curIndex != index) {\n                                if (!this._tableViewDelegate ||\n                                    !this._tableViewDelegate.tableCellShouldSelect ||\n                                    this._tableViewDelegate.tableCellShouldSelect(this, index)) {\n\n                                    this._selectedIndices.pop();\n                                    if (this._tableViewDelegate && this._tableViewDelegate.tableCellWillDeselected) {\n                                        this._tableViewDelegate.tableCellWillDeselected(this, curIndex);\n                                    }\n                                    let curCell = this.cellAtIndex(curIndex);\n                                    if (curCell) {\n                                        this._setSelectedForCell(curCell, false);\n                                    }\n\n                                    this._selectedIndices.push(index);\n                                    this._setSelectedForCell(cell, true);\n                                    if (this._tableViewDelegate && this._tableViewDelegate.tableCellDidSelected) {\n                                        this._tableViewDelegate.tableCellDidSelected(this, index);\n                                    }\n                                }\n                            }\n                            else {\n                                this._tableViewDelegate &&\n                                    this._tableViewDelegate.tableClickOnSelectedCell &&\n                                    this._tableViewDelegate.tableClickOnSelectedCell(this, index);\n                            }\n                        } else {\n                            throw \"table view selection logic error\";\n                        }\n                    }\n\n                } else if (this.interactionMode == VDTableViewInteractionMode.MULTIPLE_SELECTION) {\n                    if (this._selectedIndices.length == 0) {\n                        if (!this._tableViewDelegate ||\n                            !this._tableViewDelegate.tableCellShouldSelect ||\n                            this._tableViewDelegate.tableCellShouldSelect(this, index)) {\n                            this._selectedIndices.push(index);\n                            this._setSelectedForCell(cell, true);\n                            if (this._tableViewDelegate && this._tableViewDelegate.tableCellDidSelected) {\n                                this._tableViewDelegate.tableCellDidSelected(this, index);\n                            }\n                        }\n                    } else {\n                        let localIndex = this._selectedIndices.indexOf(index);\n                        if (localIndex >= 0) {\n                            this._selectedIndices.splice(localIndex, 1);\n                            if (this._tableViewDelegate && this._tableViewDelegate.tableCellWillDeselected) {\n                                this._tableViewDelegate.tableCellWillDeselected(this, index);\n                            }\n                            this._setSelectedForCell(cell, false);\n\n                        } else {\n                            if (!this._tableViewDelegate ||\n                                !this._tableViewDelegate.tableCellShouldSelect ||\n                                this._tableViewDelegate.tableCellShouldSelect(this, index)) {\n                                this._selectedIndices.push(index);\n                                this._setSelectedForCell(cell, true);\n                                if (this._tableViewDelegate && this._tableViewDelegate.tableCellDidSelected) {\n                                    this._tableViewDelegate.tableCellDidSelected(this, index);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public getStartIndex(): number {\n        let startIdx = this._indexFromOffset(cc.v2(Math.abs(this.offsetMinX), Math.abs(this.offsetMaxY)));\n        return startIdx;\n    }\n\n    public getEndIndex(): number {\n        let dX = 0;\n        let dY = 0;\n        if (this.direction == VDScrollDirection.VERTICAL) {\n            dX = this._cellSize.width - 0.1;\n        } else if (this.direction == VDScrollDirection.HORIZONTAL) {\n            dY = this._cellSize.height - 0.1;\n        }\n        let endIdx = this._indexFromOffset(cc.v2(Math.abs(this.offsetMinX) + this.node.getComponent(cc.UITransform)!.width - dX, Math.abs(this.offsetMaxY) + this.node.getComponent(cc.UITransform)!.height - dY));\n        if (endIdx < 0 || endIdx > this._lastestCellCount - 1) {\n            endIdx = this._lastestCellCount - 1;\n        }\n        return endIdx;\n    }\n\n    public scrollToIndex(index: number, animated: boolean = true) {\n        let offset = this._offsetFromIndex(index);\n        let x = - this.content.getComponent(cc.UITransform)!.anchorX * this.content.getComponent(cc.UITransform)!.width + offset.x + this.node.getComponent(cc.UITransform)!.anchorX * this.node.getComponent(cc.UITransform)!.width;\n        let y = (1.0 - this.content.getComponent(cc.UITransform)!.anchorY) * this.content.getComponent(cc.UITransform)!.height - offset.y - (1.0 - this.node.getComponent(cc.UITransform)!.anchorY) * this.node.getComponent(cc.UITransform)!.height;\n        this.scrollTo(cc.v2(x, y), animated);\n    }\n\n    private _updateCellCount(): number {\n        this._lastestCellCount = this._dataSource.numberOfCellsInTableView(this);\n        return this._lastestCellCount;\n    }\n\n    protected scrollViewDidScroll(scrollView: VDScrollView) {\n        let countOfItems = this._lastestCellCount;\n        if (countOfItems <= 0) {\n            return;\n        }\n\n        this._startIdx = this.getStartIndex();\n        this._endIdx = this.getEndIndex();\n\n        if (this._isUsedCellsDirty) {\n            this._isUsedCellsDirty = false;\n            this._cellsUsed.sort(function (a: cc.Node, b: cc.Node): number {\n                return parseInt(a.name) - parseInt(b.name);\n            });\n        }\n\n        let maxIdx = countOfItems - 1;\n\n        if (this._cellsUsed.length > 0) {\n            let cell = this._cellsUsed[0];\n            let idx = parseInt(cell.name);\n            while (idx < this._startIdx) {\n                this._moveCellOutOfSight(cell, 0);\n                if (this._cellsUsed.length > 0) {\n                    cell = this._cellsUsed[0];\n                    idx = parseInt(cell.name);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (this._cellsUsed.length > 0) {\n            let cell = this._cellsUsed[this._cellsUsed.length - 1];\n            let idx = parseInt(cell.name);\n\n            while (idx <= maxIdx && idx > this._endIdx) {\n                this._moveCellOutOfSight(cell, this._cellsUsed.length - 1);\n                if (this._cellsUsed.length > 0) {\n                    cell = this._cellsUsed[this._cellsUsed.length - 1];\n                    idx = parseInt(cell.name);\n                } else {\n                    break;\n                }\n            }\n        }\n\n        for (let i = this._startIdx; i <= this._endIdx; i++) {\n            if (this._indices.has(i)) {\n                continue;\n            }\n            this.updateCellAtIndex(i);\n        }\n\n        if (this._tableViewDelegate && this._tableViewDelegate.scrollViewDidScroll) {\n            this._tableViewDelegate.scrollViewDidScroll(this);\n        }\n    }\n\n    updateCellAtIndex(idx: number) {\n        if (idx < 0 || idx >= this._lastestCellCount) {\n            return;\n        }\n\n        let cell = this.cellAtIndex(idx);\n        if (cell) {\n            this._moveCellOutOfSight(cell);\n        }\n        if (idx >= this._startIdx && idx <= this._endIdx) {\n            cell = this._dataSource.tableCellAtIndex(this, idx);\n            this._setIndexForCell(idx, cell);\n            this._addCellIfNecessary(cell);\n            switch (this.interactionMode) {\n                case VDTableViewInteractionMode.SINGLE_SELECTION:\n                case VDTableViewInteractionMode.MULTIPLE_SELECTION:\n                    this._setSelectedForCell(cell, this._selectedIndices.indexOf(idx) >= 0, true)\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    private _addCellIfNecessary(cell: cc.Node) {\n        if (cell.parent != this.content) {\n            this.content.addChild(cell);\n        }\n        this._cellsUsed.push(cell);\n        this._indices.add(parseInt(cell.name));\n        this._isUsedCellsDirty = true;\n    }\n\n    cellAtIndex(idx: number): cc.Node | null {\n        if (this._indices.has(idx)) {\n            for (let cell of this._cellsUsed) {\n                if (parseInt(cell.name) == idx) {\n                    return cell;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    reloadData() {\n        if (!this._isOnLoadCalled) {\n            return;\n        }\n        for (let cell of this._cellsUsed) {\n            if (this._tableViewDelegate && this._tableViewDelegate.tableCellWillRecycle) {\n                this._tableViewDelegate.tableCellWillRecycle(this, cell, parseInt(cell.name));\n            }\n\n            this._cellsFreed.put(cell);\n            cell.name = \"-1\";\n            if (cell.parent == this.content) {\n                this.content.removeChild(cell);\n            }\n        }\n\n        this._indices.clear();\n        this._cellsUsed.splice(0, this._cellsUsed.length);\n        this._isUsedCellsDirty = true;\n        this._updateContentSize();\n\n        this.scrollViewDidScroll(this);\n    }\n\n    dequeueCell(): cc.Node {\n        let cell: cc.Node = null!;\n        if (this._cellsFreed.size() == 0) {\n            cell = cc.instantiate(this.tableCell) as cc.Node;\n            cell.name = \"-1\";\n        } else {\n            cell = this._cellsFreed.get()!;\n        }\n        return cell;\n    }\n\n    private _indexFromOffset(offset: cc.Vec2) {\n        if (offset.x < 0 || offset.x > this._realContentSize.width || offset.y < 0 || offset.y > this._realContentSize.height) {\n            return -1;\n        }\n        let index = -1;\n        let cellNum = this._lastestCellCount;\n        let maxIdx = cellNum - 1;\n        let size = this._cellSize;\n\n        if (this.direction == VDScrollDirection.VERTICAL) {\n            let idxX = Math.floor(offset.x / size.width);\n            let idxY = Math.floor(offset.y / size.height);\n            if (this.fillOrder == VDTableViewFillOrder.LEFT_TO_RIGHT__TOP_TO_BOTTOM) {\n                if (idxX >= this._cols) {\n                    return -1;\n                }\n                index = idxY * this._cols + idxX;\n            } else {\n                if (idxY >= this._rows) {\n                    return -1;\n                }\n                index = idxX * this._rows + idxY;\n            }\n        } else if (this.direction == VDScrollDirection.HORIZONTAL) {\n            let idxX = Math.floor(offset.x / size.width);\n            let idxY = Math.floor(offset.y / size.height);\n            if (this.fillOrder == VDTableViewFillOrder.LEFT_TO_RIGHT__TOP_TO_BOTTOM) {\n                if (idxX >= this._cols) {\n                    return -1;\n                }\n                index = idxY * this._cols + idxX;\n            } else {\n                if (idxY >= this._rows) {\n                    return -1;\n                }\n                index = idxX * this._rows + idxY;\n            }\n        }\n        if (index >= 0 && index <= maxIdx) {\n            return index;\n        } else {\n            return -1;\n        }\n    }\n\n    private _offsetFromIndex(index: number) {\n        let offset = cc.v2(0, 0);// cc.Vec2.ZERO;\n        let cellSize = this._cellSize;\n\n        if (this.direction == VDScrollDirection.VERTICAL) {\n            let idxX = 0;\n            let idxY = 0;\n            if (this.fillOrder == VDTableViewFillOrder.LEFT_TO_RIGHT__TOP_TO_BOTTOM) {\n                idxY = Math.floor(index / this._cols);\n                idxX = index % this._cols;\n            } else {\n                idxX = Math.floor(index / this._rows);\n                idxY = index % this._rows;\n            }\n            offset = cc.v2(idxX * cellSize.width, idxY * cellSize.height);\n        } else if (this.direction == VDScrollDirection.HORIZONTAL) {\n            let idxX = 0;\n            let idxY = 0;\n            if (this.fillOrder == VDTableViewFillOrder.LEFT_TO_RIGHT__TOP_TO_BOTTOM) {\n                idxY = Math.floor(index / this._cols);\n                idxX = index % this._cols;\n            } else {\n                idxX = Math.floor(index / this._rows);\n                idxY = index % this._rows;\n            }\n            offset = cc.v2(idxX * cellSize.width, idxY * cellSize.height);\n        }\n        return offset;\n    }\n\n    private _moveCellOutOfSight(cell: cc.Node, idx: number = -1) {\n        if (this._tableViewDelegate && this._tableViewDelegate.tableCellWillRecycle) {\n            this._tableViewDelegate.tableCellWillRecycle(this, cell, parseInt(cell.name));\n        }\n\n        this._cellsFreed.put(cell);\n        if (idx >= 0) {\n            this._cellsUsed.splice(idx, 1);\n        } else {\n            let localIndex = this._cellsUsed.indexOf(cell);\n            if (localIndex >= 0) {\n                this._cellsUsed.splice(localIndex, 1);\n            }\n        }\n\n        this._isUsedCellsDirty = true;\n        this._indices.delete(parseInt(cell.name));\n\n        cell.name = \"-1\";\n\n        if (cell.parent == this.content) {\n            this.content.removeChild(cell);\n        }\n    }\n\n    private _setIndexForCell(index: number, cell: cc.Node) {\n        let offset = this._offsetFromIndex(index);\n        let x = - this.content.getComponent(cc.UITransform)!.anchorX * this.content.getComponent(cc.UITransform)!.width + offset.x + this._cellAnchor.x * this._cellSize.width;\n        let y = (1.0 - this.content.getComponent(cc.UITransform)!.anchorY) * this.content.getComponent(cc.UITransform)!.height - offset.y - (1.0 - this._cellAnchor.y) * this._cellSize.height;\n        cell.setPosition(cc.v3(x, y, 0));\n        cell.name = index.toString();\n    }\n\n    private _onViewSizeChanged() {\n        this._updateContentSize();\n        if (this._isOnLoadCalled && this.enabledInHierarchy) {\n            this.reloadData();\n        }\n    }\n\n    private _updateGridData(): void {\n        this._updateCellCount();\n        let cellsCount = this._lastestCellCount;\n        if (cellsCount > 0) {\n            switch (this.direction) {\n                case VDScrollDirection.HORIZONTAL:\n                    {\n                        this._rows = Math.min(cellsCount, Math.floor((Math.max(this.node.getComponent(cc.UITransform)!.height, this._cellSize.height)) / this._cellSize.height));\n                        this._cols = Math.ceil(cellsCount / this._rows);\n                        this._realContentSize = cc.size(this._cols * this._cellSize.width, this._rows * this._cellSize.height);\n                    }\n                    break;\n                case VDScrollDirection.VERTICAL:\n                    {\n                        this._cols = Math.min(cellsCount, Math.floor(Math.max(this.node.getComponent(cc.UITransform)!.width, this._cellSize.width) / this._cellSize.width));\n                        this._rows = Math.ceil(cellsCount / this._cols);\n                        this._realContentSize = cc.size(this._cols * this._cellSize.width, this._rows * this._cellSize.height);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            this._realContentSize = cc.Size.ZERO;\n            this._rows = this._cols = 0;\n        }\n    }\n\n    private _updateContentSize() {\n        this._updateGridData();\n        // var e = this._realContentSize;\n        let maxWidth = Math.max(this.node.getComponent(cc.UITransform)!.width, this._realContentSize.width);\n        let maxHeight = Math.max(this.node.getComponent(cc.UITransform)!.height, this._realContentSize.height);\n        this._realContentSize = cc.size(maxWidth, maxHeight);\n        this.content.getComponent(cc.UITransform)!.contentSize.equals(this._realContentSize) || (this.content.getComponent(cc.UITransform)!.setContentSize(this._realContentSize),\n            this.enabledInHierarchy || this._recalculateBoundary());\n        // cc.log(`contentSize: ${this.content.getComponent(cc.UITransform)!.contentSize}`);\n        // cc.log(`_realContentSize: ${this._realContentSize}`);\n        // cc.log(`node: ${this.node.getComponent(cc.UITransform)!.contentSize}`);\n    }\n\n}\n"]}