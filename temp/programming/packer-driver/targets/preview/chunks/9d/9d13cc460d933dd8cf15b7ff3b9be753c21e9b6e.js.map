{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/science/level3_science.ts"],"names":["_decorator","Component","Node","log","Prefab","tween","v3","Label","Graphics","v2","VDScreenManager","level_progress_bar","ccclass","property","level3_science","type","graphics","canPlay","levelNumber","listPosSrc","ListPosDestination","pSrc","pTarget","pStart","pDrawStart","pTemp","currentStart","firstOne","isStart","idAnswer","start","startPlay","lev","level","getComponent","string","Number","initGraphic","draw","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","lineWidth","event","i","listAnswers","length","pLeft","getWorldPosition","x","y","listQuestion","pRight","p","getUILocation","out","area","inverseTransformPoint","g","moveTo","checkStart","dx","Math","abs","dy","lineTo","stroke","handleDrawAgain","handleDrawContinue","checkAnswer","drawAgain","clear","out1","onClickInstruction","onClickBack","instance","popToRootScreen","processCorrect","fireWork","active","to","scale","call","showPopupNext","processWrong","update","deltaTime","showPopupFromPrefabName","popup","popupWin","finishedCallback","level2_screen","assetBundle","get","String","pushScreen","screen"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Sprite, Color, log, Prefab, tween, v3, Label, Vec3, Button, UIOpacity, EventTouch, Graphics, v2, Vec2 } from 'cc';\r\nimport VDBaseScreen from '../../../../../vd-framework/ui/VDBaseScreen';\r\nimport VDScreenManager from '../../../../../vd-framework/ui/VDScreenManager';\r\nimport { ScaleFactor, scaleTo, scaleTo2, TimeFactor } from '../../transiton/Transformation';\r\n\r\nimport { level_progress_bar } from '../../transiton/level_progress_bar';\r\nimport LocalDataManager from '../../common/LocalDataManager';\r\nimport { handleFirework } from '../../common/handleFirework';\r\nimport { scaleAndHide } from '../../transiton/Transformation';\r\nimport VDBasePopup from '../../../../../vd-framework/ui/VDBasePopup';\r\nimport { popup_next } from '../../popups/popup_next';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level3_science')\r\nexport class level3_science extends Component {\r\n    @property({type: Node})\r\n    draw: Node = null;\r\n    @property({type: Node})\r\n    area: Node = null;\r\n    @property({type: Node})\r\n    listAnswers: Node[] = [];\r\n    @property({type: Node})\r\n    listQuestion: Node[] = [];\r\n    @property({type: Node})\r\n    fireWork: Node = null;\r\n\r\n    @property({type: Node})\r\n    left: Node = null;\r\n    @property({type: Node})\r\n    right: Node = null;\r\n\r\n    @property(level_progress_bar)\r\n    levelBarUI: level_progress_bar = null;\r\n    @property(Node)\r\n    level: Node = null;\r\n\r\n    private graphics = null;\r\n    private canPlay = true;\r\n    public levelNumber = 1;\r\n    private listPosSrc = [];\r\n    private ListPosDestination = [];\r\n\r\n    private pSrc: Vec2;\r\n    private pTarget: Vec2;\r\n    private pStart: Vec2;\r\n    private pDrawStart: Vec2;\r\n    private pTemp: Vec2;\r\n    private currentStart: Vec2;\r\n    private firstOne = true;\r\n    private isStart = false;\r\n    private idAnswer = null;\r\n\r\n    start() {\r\n        this.startPlay();\r\n    }\r\n    startPlay() { \r\n        if(this.canPlay){\r\n            let lev = this.level.getComponent(Label).string;\r\n            this.levelNumber = Number(lev);\r\n            this.initGraphic();\r\n           \r\n            this.draw.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\r\n            this.draw.on(Node.EventType.TOUCH_MOVE, this.onTouchMove.bind(this));\r\n            this.draw.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\r\n        }\r\n    }\r\n    initGraphic(){\r\n        this.graphics = this.draw.getComponent(Graphics);\r\n        this.graphics.lineWidth = 10;\r\n\r\n    }\r\n    onTouchStart(event: EventTouch){\r\n        if(this.firstOne){\r\n            // gan vi tri nguon\r\n            for(let i=0; i<this.listAnswers.length; i++){\r\n                let pLeft = this.listAnswers[i].getWorldPosition();\r\n                this.listPosSrc[i] = v2(pLeft.x, pLeft.y);\r\n            }\r\n            // gan vi tri dich\r\n            for(let i=0; i<this.listQuestion.length; i++){\r\n                let pRight = this.listQuestion[i].getWorldPosition();\r\n                this.ListPosDestination[i] = v2(pRight.x, pRight.y);\r\n            }\r\n            log(\"check first start: \", this.listPosSrc, this.ListPosDestination);\r\n        }else {\r\n            this.pStart = v2(this.pTemp.x, this.pTemp.y);\r\n        }\r\n        // gan vi tri bat dau ve\r\n        let p = event.getUILocation();\r\n        this.pDrawStart = v2(p.x, p.y);\r\n        \r\n        // xu ly ve\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(p.x, p.y, 0));\r\n        let g = this.graphics;\r\n        g.moveTo(out.x, out.y);\r\n    }\r\n    checkStart(){\r\n        for(let i=0; i<this.listPosSrc.length; i++){\r\n            let dx = Math.abs(this.listPosSrc[i].x-this.pDrawStart.x);\r\n            let dy = Math.abs(this.listPosSrc[i].y-this.pDrawStart.y);\r\n            if(dx<50 && dy<50){\r\n                log(\"check start: \", this.listPosSrc[i]);\r\n                this.pStart = this.listPosSrc[i];\r\n                this.idAnswer = i;\r\n                break;\r\n            }else {\r\n                this.pStart = v2(0, 0);\r\n                log(\"check start draw again!\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    onTouchMove(event: EventTouch){\r\n        let p = event.getUILocation();\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(p.x, p.y, 0));\r\n        let g = this.graphics;\r\n        g.lineTo(out.x, out.y);\r\n        g.stroke();\r\n    }\r\n    onTouchEnd(event: EventTouch){\r\n        // check xem no bat dau o cau tra loi nao\r\n        this.checkStart();\r\n        if(this.idAnswer != null){\r\n            \r\n        }\r\n        let p = event.getUILocation();\r\n        log(\"compare: \", this.pStart, this.pDrawStart);\r\n        let dx = Math.abs(this.pStart.x-this.pDrawStart.x);\r\n        let dy = Math.abs(this.pStart.y-this.pDrawStart.y);\r\n        if(dx>40 || dy>40){\r\n            log(\"draw again!\")\r\n            this.pTemp = v2(this.pStart.x, this.pStart.y);\r\n            this.handleDrawAgain();\r\n            \r\n        }else {\r\n            log(\"draw continue!\");\r\n            this.pTemp = v2(p.x, p.y);\r\n            this.handleDrawContinue();\r\n            //check answer before draw coninue;\r\n            this.checkAnswer();\r\n        }\r\n        \r\n    }\r\n    drawAgain(){\r\n        this.graphics.clear();\r\n    }\r\n    handleDrawAgain(){\r\n\r\n    }\r\n    handleDrawContinue(){\r\n        let g = this.graphics;\r\n        //quy doi ve cung toa do\r\n        let out1 = v3();\r\n        this.area.inverseTransformPoint(out1, v3(this.pDrawStart.x, this.pDrawStart.y, 0));\r\n        // di chuyen ve diem can ve\r\n        g.moveTo(out1.x, out1.y);\r\n        this.area.inverseTransformPoint(out1, v3(this.pStart.x, this.pStart.y, 0));\r\n        // ve den diem can ve\r\n        g.lineTo(out1.x, out1.y);\r\n        g.stroke();\r\n    }\r\n    onClickInstruction() {\r\n        // scaleTo(this.answer, ScaleFactor.BIG_BY_2, ScaleFactor.SMALL_BY_0_5, TimeFactor.MEDIUM, this.toDefault.bind(this));\r\n    }\r\n    onClickBack() {\r\n        VDScreenManager.instance.popToRootScreen();\r\n    } \r\n    checkAnswer(){\r\n        if(this.canPlay){\r\n            let dx = Math.abs(this.pTarget.x - this.pTemp.x);\r\n            let dy = Math.abs(this.pTarget.y - this.pTemp.y);\r\n            if(dx<50 && dy<50) {\r\n                this.processCorrect();\r\n            }\r\n        }\r\n    }\r\n    processCorrect(){\r\n        // let ob = LocalDataManager.getObject(\"check\", {});\r\n        // let checkDone = ob.science[this.levelNumber];\r\n        // if(this.levelBarUI){\r\n        //     if(!checkDone) {\r\n        //         this.levelBarUI.handleProgress();\r\n        //     }\r\n        //     ob.science[this.levelNumber+1] = true;\r\n        //     LocalDataManager.setObject(\"check\", ob);\r\n        // }\r\n        \r\n        this.canPlay = false;\r\n        this.fireWork.active = true;\r\n        tween(this.fireWork)\r\n        .to(3, {scale: v3(1, 1, 0)})\r\n        .call(()=>{\r\n            this.showPopupNext();\r\n        })\r\n        .call(()=>{\r\n            this.fireWork.active = false;\r\n        })\r\n        .start();\r\n        // this.smile.active = true;\r\n        // this.smile.setScale( v3(0.1, 0.1, 0));\r\n        // scaleAndHide(this.smile, v3(0.6, 0.6, 0), 2);\r\n    }\r\n    processWrong(){\r\n        // this.cry.active = true;\r\n        // tween(this.cry)\r\n        // .to(1, {scale: v3(0.08, 0.08, 0)})\r\n        // .to(0.2, {scale: v3(0, 0, 0)})\r\n        // .start();\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    // active popup next\r\n    showPopupNext() {\r\n        log(\"check\", this.levelNumber);\r\n        VDScreenManager.instance.showPopupFromPrefabName(\"res/prefabs/popup/popup_next\", (popup: VDBasePopup) => {\r\n            let popupWin = popup as popup_next;\r\n            // dinh nghia finshedCallBack chua goi nó\r\n            popupWin.finishedCallback = () => {\r\n                let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/science/level'+String(this.levelNumber+1), Prefab)!;\r\n                VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true); \r\n                log(' Just Closed Popup !!!');\r\n            };\r\n        }, false, true, true);\r\n    }\r\n}\r\n\r\n\r\n"]}