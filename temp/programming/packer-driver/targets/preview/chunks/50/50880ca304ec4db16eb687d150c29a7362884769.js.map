{"version":3,"sources":["file:///C:/Users/Admin/Downloads/Telegram%20Desktop/FrameworkCocos/FrameworkCocos/assets/vd-framework/async-task/VDBaseTask.ts"],"names":["VDBaseTask","constructor","caller","funcName","args","delay","_delay","_caller","_funcName","_args","_executed","undefined","update","dt","execute","isDone","apply","cleanUp"],"mappings":";;;iBAAqBA,U;;;;;;;;;;;;;yBAAAA,U,GAAN,MAAMA,UAAN,CAAiB;AAQ5BC,QAAAA,WAAW,CAACC,MAAD,EAAcC,QAAd,EAA6BC,IAA7B,EAAwCC,KAAxC,EAAuD;AAAA,eANlEC,MAMkE,GANzD,CAMyD;AAAA,eALlEC,OAKkE,GALnD,IAKmD;AAAA,eAJlEC,SAIkE,GAJjD,IAIiD;AAAA,eAHlEC,KAGkE;AAAA,eAFlEC,SAEkE,GAFtD,KAEsD;AAC9D,eAAKH,OAAL,GAAeL,MAAf;AACA,eAAKM,SAAL,GAAiBL,QAAjB;AACA,eAAKM,KAAL,GAAaL,IAAb;;AAEA,cAAIC,KAAK,KAAKM,SAAd,EAAyB;AACrB,iBAAKL,MAAL,GAAcD,KAAd;AACH;AACJ;AAED;AACJ;AACA;AACA;;;AACIO,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAI,KAAKP,MAAL,IAAe,CAAnB,EAAsB;AAClB,iBAAKA,MAAL,IAAeO,EAAf;AAEA,gBAAI,KAAKP,MAAL,IAAe,CAAnB,EAAsB,KAAKQ,OAAL;AACzB;AACJ;AAED;AACJ;AACA;AACA;;;AACIC,QAAAA,MAAM,GAAY;AACd,iBAAO,KAAKL,SAAZ;AACH;AAED;AACJ;AACA;;;AACII,QAAAA,OAAO,GAAG;AAAA;;AACN,cAAI,KAAKJ,SAAT,EAAoB;AACpB,eAAKA,SAAL,GAAiB,IAAjB;AAEA,kCAAKF,SAAL,qCAAgBQ,KAAhB,CAAsB,KAAKT,OAA3B,EAAoC,KAAKE,KAAzC;AACH;AAED;AACJ;AACA;;;AACIQ,QAAAA,OAAO,GAAG;AACN,eAAKV,OAAL,GAAe,IAAf;AACA,eAAKC,SAAL,GAAiB,IAAjB;AACA,eAAKC,KAAL,GAAa,IAAb;AACH;;AAvD2B,O","sourcesContent":["export default class VDBaseTask {\n\n    _delay = 0;\n    _caller: any = null;\n    _funcName: any = null;\n    _args: any;\n    _executed = false;\n\n    constructor(caller: any, funcName: any, args: any, delay: number) {\n        this._caller = caller;\n        this._funcName = funcName;\n        this._args = args;\n\n        if (delay !== undefined) {\n            this._delay = delay;\n        }\n    }\n\n    /**\n     * cooldown delay time and execute if delay over\n     * @param dt\n     */\n    update(dt: number) {\n        if (this._delay >= 0) {\n            this._delay -= dt;\n\n            if (this._delay <= 0) this.execute();\n        }\n    }\n\n    /**\n     * true if executed\n     * @returns {boolean}\n     */\n    isDone(): boolean {\n        return this._executed;\n    }\n\n    /**\n     * execute the task\n     */\n    execute() {\n        if (this._executed) return;\n        this._executed = true;\n\n        this._funcName?.apply(this._caller, this._args);\n    }\n\n    /**\n     * clean up all\n     */\n    cleanUp() {\n        this._caller = null;\n        this._funcName = null;\n        this._args = null;\n    }\n}\n"]}