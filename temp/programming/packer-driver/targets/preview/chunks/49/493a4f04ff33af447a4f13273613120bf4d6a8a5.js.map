{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/science/level4_science.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Graphics","level_progress_bar","ccclass","property","level4_science","graphics","draw","start","initGraphic","gPrefab","nodeG","getComponent","g","lineWidth","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAA4BC,MAAAA,Q,OAAAA,Q;;AACjEC,MAAAA,kB,iBAAAA,kB;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;gCAGjBS,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ;AAAA;AAAA,mD,UAERA,QAAQ,CAACN,IAAD,C,UAERM,QAAQ,CAACL,MAAD,C,2BANb,MACaM,cADb,SACoCR,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQlCS,QARkC,GAQvB,IARuB;AAAA,eASlCC,IATkC,GAS3B,IAT2B;AAAA;;AAU1CC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL;AACA,eAAKF,IAAL;AACH;;AACDE,QAAAA,WAAW,GAAE;AACT,eAAKF,IAAL,GAAYP,WAAW,CAAC,KAAKU,OAAN,CAAvB;AACA,cAAIC,KAAK,GAAG,KAAKJ,IAAjB;AACA,eAAKD,QAAL,GAAgBK,KAAK,CAACC,YAAN,CAAmBX,QAAnB,CAAhB;AACA,cAAIY,CAAC,GAAG,KAAKP,QAAb;AACAO,UAAAA,CAAC,CAACC,SAAF,GAAc,EAAd,CALS,CAMT;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAzByC,O;;;;;iBAET,I;;;;;;;iBAEnB,I;;;;;;;iBAEI,I","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, log, Gradient, Graphics } from 'cc';\r\nimport { level_progress_bar } from '../../transiton/level_progress_bar';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level4_science')\r\nexport class level4_science extends Component {\r\n    @property(level_progress_bar)\r\n    levelBarUI: level_progress_bar = null;\r\n    @property(Node)\r\n    level: Node = null;\r\n    @property(Prefab)\r\n    gPrefab: Prefab = null;\r\n\r\n    private graphics = null;\r\n    private draw = null;\r\n    start() {\r\n        this.initGraphic();\r\n        this.draw \r\n    }\r\n    initGraphic(){\r\n        this.draw = instantiate(this.gPrefab);\r\n        let nodeG = this.draw;\r\n        this.graphics = nodeG.getComponent(Graphics);\r\n        let g = this.graphics;\r\n        g.lineWidth = 10;\r\n        // this.graphics = \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}