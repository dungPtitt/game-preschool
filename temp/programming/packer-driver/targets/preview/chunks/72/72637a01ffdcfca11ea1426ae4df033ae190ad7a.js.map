{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/science/level1_science.ts"],"names":["_decorator","Component","Node","Graphics","v3","log","ccclass","property","level1_science","graphics","start","initGraphic","draw","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","getComponent","lineWidth","startP","left","getWorldPosition","g","moveTo","x","y","lineTo","stroke","event","pStart","getUILocation","out","area","inverseTransformPoint","newP","checkCorrect","p","update","deltaTime","clearDraw","clear"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Graphics, EventTouch, v3, Vec3, log } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_science')\r\nexport class level1_science extends Component {\r\n    @property(Node)\r\n    left: Node = null;\r\n    @property(Node)\r\n    right: Node = null;\r\n    @property(Node)\r\n    area: Node = null;\r\n    @property(Node)\r\n    draw: Node = null;\r\n    private graphics: Graphics = null;\r\n    start() {\r\n        this.initGraphic();\r\n        this.draw.on(Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.draw.on(Node.EventType.TOUCH_MOVE, this.touchMove, this)\r\n    }\r\n    initGraphic(){\r\n        this.graphics = this.draw.getComponent(Graphics);\r\n        this.graphics.lineWidth = 10;\r\n\r\n        let startP = this.left.getWorldPosition();\r\n        let g = this.graphics;\r\n        g.moveTo(startP.x, startP.y);\r\n        g.lineTo(startP.x+2, startP.y+2);\r\n        g.stroke();\r\n    }\r\n    touchStart(event: EventTouch){\r\n        let pStart = event.getUILocation();\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(pStart.x, pStart.y, 0));\r\n        let g = this.graphics;\r\n        g.moveTo(out.x, out.y);\r\n        g.stroke();\r\n    }\r\n\r\n    touchMove(event: EventTouch){\r\n        let newP = event.getUILocation();\r\n        log(\"check p\", newP)\r\n        // this.checkCorrect(newP);\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(newP.x, newP.y, 0));\r\n        let g = this.graphics;\r\n        g.lineTo(out.x, out.y);\r\n        g.stroke();\r\n    }\r\n    checkCorrect(p: Vec3){\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    clearDraw(){\r\n        this.graphics.clear();\r\n    }\r\n}\r\n\r\n\r\n"]}