{"version":3,"sources":["file:///C:/Users/Admin/Downloads/Telegram%20Desktop/FrameworkCocos/FrameworkCocos/assets/vd-framework/audio/VDAudioNativeManager.ts"],"names":["VDAudioNativeManager","AudioClip","AudioSource","tween","log","VDAsyncTaskMgr","VDBaseTask","VDSequenceTask","VDScreenManager","VDAudio","constructor","_bgmAS","_clipAs","_sfx","_idSfx","_audiosPool","init","data","instance","node","addComponent","playBGM","name","fade","playing","stop","path","musicPath","clip","assetBundle","get","audioSource","isMutingMusic","volume","play","loop","setTimeout","pause","_musicVolume","FADE_DURATION","pauseBGM","resumeBGM","playClip","callback","isMutingEffect","removeTaskByKey","sequenceTasks","setKey","pushTask","getDuration","executeTask","stopClip","playEffect","effectPath","length","shift","sfxName","_effectVolume","getComponents","Object","keys","maxAudioChannel","sfx_id","as","isValid","push","stopEffect","sfxId","stopEffectByName","audios","values","ret","sfx","includes","resumeEffect","pauseEffect","stopAllEffects","forEach","idSfx","pauseAllEffects","resumeAllEffects","duration","to","call","start","destroy"],"mappings":"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","sourcesContent":["import { _decorator, AudioClip, AudioSource, tween, log } from 'cc';\nimport VDAsyncTaskMgr from '../async-task/VDAsyncTaskMgr';\nimport VDBaseTask from '../async-task/VDBaseTask';\nimport VDSequenceTask from '../async-task/VDSequenceTask';\nimport VDScreenManager from '../ui/VDScreenManager';\nimport { VDAudio } from './VDAudio';\n\nexport class VDAudioNativeManager extends VDAudio {\n\n    constructor() {\n        super();\n    }\n\n    private _bgmAS: AudioSource = null!;\n    private _clipAs: AudioSource = null!;\n    private _sfx: { [name: string]: AudioSource } = {};\n    private _idSfx = 0;\n    private _audiosPool: AudioSource[] = [];\n\n    init(data) {\n        log('@ VDAudioNativeManager ver 1.1');\n        this._bgmAS = VDScreenManager.instance.node.addComponent(AudioSource);\n        this._clipAs = VDScreenManager.instance.node.addComponent(AudioSource);\n    }\n\n    playBGM(name: string, fade: boolean = false) {\n        // if (this.isMutingMusic) return;\n\n        if (this._bgmAS.playing) {\n            this._bgmAS.stop();\n        }\n\n        let path = this.musicPath + name;\n        let clip = VDScreenManager.instance.assetBundle.get(path, AudioClip);\n        if (clip) {\n            let audioSource = this._bgmAS;\n            audioSource.clip = clip;\n            if (this.isMutingMusic) {\n                log(\"playBGM Native pause \" + name)\n                // audioSource.pause();\n                this._bgmAS.volume = 0;\n                this._bgmAS.play();\n                audioSource.loop = true;\n                setTimeout(() => {\n                    this._bgmAS.pause();\n                }, 200);\n            }\n            else {\n                log(\"playBGM Native play \" + name)\n                audioSource.volume = this._musicVolume;\n                audioSource.loop = true;\n                if (fade) {\n                    this._bgmAS.volume = 0;\n                    this._bgmAS.play();\n                    this.fade(this._bgmAS, this._musicVolume, VDAudioNativeManager.FADE_DURATION);\n                }\n                else {\n                    this._bgmAS.volume = this._musicVolume;\n                    this._bgmAS.play();\n                }\n            }\n        }\n    }\n\n    pauseBGM(fade = true) {\n        log(\"pauseBGM Native\");\n\n        if (this._bgmAS.playing) {\n            log(\"pauseBGM Native 2\");\n            if (!fade) {\n                this._bgmAS.pause();\n            }\n            else {\n                this.fade(this._bgmAS, 0, VDAudioNativeManager.FADE_DURATION, () => {\n                    this._bgmAS.pause();\n                    // this._bgmAS.volume = this._musicVolume;\n                });\n            }\n        }\n    }\n\n    resumeBGM(fade = true) {\n        if (this.isMutingMusic) return;\n        log(\"resumeBGM Native\");\n\n        if (!this._bgmAS.playing) {\n            if (fade) {\n                this._bgmAS.volume = 0;\n                this._bgmAS.play();\n                this.fade(this._bgmAS, this._musicVolume, VDAudioNativeManager.FADE_DURATION);\n            }\n            else {\n                this._bgmAS.volume = this._musicVolume;\n                this._bgmAS.play();\n            }\n        }\n    }\n\n    playClip(name: string, loop: boolean = false, resumeBGM: boolean = true, callback: VoidFunction | null = null) {\n        if (this.isMutingEffect) return;\n\n        if (this._clipAs.playing) {\n            this._clipAs.stop();\n            VDAsyncTaskMgr.instance.removeTaskByKey('stop_clip');\n        }\n\n        let path = this.musicPath + name;\n        let clip = VDScreenManager.instance.assetBundle.get(path, AudioClip);\n        if (clip) {\n            if (this._bgmAS.playing) {\n                this.pauseBGM();\n            }\n            log(\"playClip Native \" + name);\n\n            let audioSource = this._clipAs;\n            audioSource.clip = clip;\n            audioSource.volume = this._musicVolume;\n            audioSource.loop = loop;\n            audioSource.play();\n\n            if (resumeBGM) {\n                let sequenceTasks = new VDSequenceTask();\n                sequenceTasks.setKey('stop_clip');\n                sequenceTasks.pushTask(new VDBaseTask(this, this.resumeBGM, [], clip.getDuration()));\n                VDAsyncTaskMgr.instance.executeTask(sequenceTasks);\n            }\n\n            if (!loop && callback) {\n                // this._clipAs.node.once(AudioSource.EventType.ENDED, callback);\n                setTimeout(() => {\n                    callback();\n                }, clip.getDuration() * 1000);\n            }\n        }\n    }\n\n    stopClip(resumeBGM: boolean = true, callback: VoidFunction | null = null) {\n        if (this._clipAs.playing) {\n            // this._clipAs.stop();\n            this.fade(this._clipAs, 0, VDAudioNativeManager.FADE_DURATION, () => {\n                this._clipAs.stop();\n                callback && callback();\n            });\n        }\n        if (resumeBGM) {\n            // log(\"stopClip resume bgm\")\n            this.resumeBGM();\n        }\n    }\n\n    playEffect(name: string, loop: boolean = false, callback: VoidFunction | null = null): string | null {\n        if (this.isMutingEffect) return;\n        // log(\"playEffect   \" + name + \"   \" + loop);\n        let path = this.effectPath + name;\n        let clip = VDScreenManager.instance.assetBundle.get(path, AudioClip);\n        if (clip) {\n            this._idSfx++;\n            let audioSource: AudioSource = null!;\n            if (this._audiosPool.length) {\n                audioSource = this._audiosPool.shift();\n            }\n            else {\n                audioSource = VDScreenManager.instance.node.addComponent(AudioSource);\n            }\n\n            let sfxName = `${this._idSfx}_${name}`;\n            audioSource['sfx_id'] = sfxName;\n            audioSource.clip = clip;\n            audioSource.volume = this._effectVolume;\n            audioSource.loop = loop;\n            audioSource['callback'] = callback;\n            audioSource.play();\n            this._sfx[sfxName] = audioSource;\n            log(`playEffect Native: ${VDScreenManager.instance.node.getComponents(AudioSource).length} - ${Object.keys(this._sfx).length} / ${AudioSource.maxAudioChannel}`);\n            if (!loop) {\n                setTimeout((sfx_id) => {\n                    let as = this._sfx[sfx_id];\n                    if (as) {\n                        if (as.isValid) {\n                            as.stop();\n                            // as.destroy();\n                            this._audiosPool.push(as);\n                        }\n                        delete this._sfx[sfx_id];\n                        as['callback'] && as['callback']();\n                        log(`remainEffects Native: ${VDScreenManager.instance.node.getComponents(AudioSource).length} - ${Object.keys(this._sfx).length} / ${AudioSource.maxAudioChannel}`);\n                    }\n                }, clip.getDuration() * 1000, sfxName);\n            }\n            return sfxName;\n        }\n        return null;\n    }\n\n    stopEffect(sfxId: string, fade: boolean = false): boolean {\n        log(`Audio Native Manager stopEffect: ${sfxId}`);\n\n        let audioSource = this._sfx[sfxId];\n        if (audioSource) {\n            if (audioSource.playing && fade) {\n                this.fade(audioSource, 0, VDAudioNativeManager.FADE_DURATION, () => {\n                    // audioSource.isValid && audioSource.destroy();\n                    if (audioSource.isValid) {\n                        audioSource.stop();\n                        this._audiosPool.push(audioSource);\n                        // setTimeout(() => {\n                        //     audioSource.destroy();\n                        // }, 100);\n                    }\n                    delete this._sfx[sfxId];\n                    log(`Audio Native Manager stopEffect 1: ${sfxId}`);\n                });\n            }\n            else {\n                // audioSource.isValid && audioSource.destroy();\n                if (audioSource.isValid) {\n                    audioSource.stop();\n                    this._audiosPool.push(audioSource);\n\n                    // setTimeout(() => {\n                    //     audioSource.destroy();\n                    // }, 100);\n                }\n                delete this._sfx[sfxId];\n                log(`Audio Native Manager stopEffect 2: ${sfxId}`);\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    stopEffectByName(name: string, fade: boolean = false): boolean {\n        log(`Audio Native Manager stopEffectByName: ${name}`);\n        let audios = Object.values(this._sfx);\n        let ret = true;\n        for (let sfx of audios) {\n            if (sfx && sfx['sfx_id'].includes(name)) {\n                log(`stopEffectByName:${sfx['sfx_id']}`);\n                ret = ret && this.stopEffect(sfx['sfx_id']);\n            }\n        }\n\n        return ret;\n    }\n\n    resumeEffect(sfxId: string, fade: boolean = false) {\n        log(\"Audio Native Manager resumeEffect\");\n        let audioSource = this._sfx[sfxId];\n        if (audioSource && !audioSource.playing) {\n            if (fade) {\n                audioSource.volume = 0;\n                audioSource.play();\n                this.fade(audioSource, this._effectVolume, VDAudioNativeManager.FADE_DURATION);\n            }\n            else {\n                audioSource.volume = this._effectVolume;\n                audioSource.play();\n            }\n        }\n    }\n\n    pauseEffect(sfxId: string, fade: boolean = false) {\n        log(\"Audio Manager pauseEffect\");\n        let audioSource = this._sfx[sfxId];\n        if (audioSource && audioSource.playing) {\n            if (fade) {\n                this.fade(audioSource, 0, VDAudioNativeManager.FADE_DURATION, () => {\n                    audioSource.pause();\n                });\n            }\n            else {\n                audioSource.pause();\n            }\n        }\n    }\n\n    stopAllEffects(fade: boolean = false) {\n        Object.keys(this._sfx).forEach(idSfx => {\n            this.stopEffect(idSfx, fade);\n        });\n    }\n\n    pauseAllEffects(fade: boolean = false) {\n        let audios = Object.values(this._sfx);\n        audios.forEach(audioSource => {\n            audioSource && this.pauseEffect(audioSource['sfx_id'], fade);\n        });\n    }\n\n    resumeAllEffects(fade: boolean = false) {\n        let audios = Object.values(this._sfx);\n        audios.forEach(audioSource => {\n            audioSource && this.resumeEffect(audioSource['sfx_id'], fade);\n        });\n    }\n\n    fade(audioSource: AudioSource, volume: number, duration: number, callback: VoidFunction | null = null) {\n        tween(audioSource)\n            .to(duration, { volume: volume })\n            .call(() => {\n                callback && callback();\n            })\n            .start();\n    }\n\n    destroy() {\n        if (this._bgmAS) {\n            this._bgmAS.stop();\n        }\n        this.stopClip();\n        this.stopAllEffects();\n\n        this._sfx = {};\n        this._audiosPool.length = 0;\n    }\n\n}\n"]}