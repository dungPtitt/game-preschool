{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/science/level1_science.ts"],"names":["_decorator","Component","Node","Graphics","v3","log","v2","ccclass","property","level1_science","graphics","rightP","leftP","start","initGraphic","draw","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","getComponent","lineWidth","event","startP","left","getWorldPosition","endP","right","x","y","pStart","getUILocation","out","area","inverseTransformPoint","g","moveTo","stroke","newP","checkCorrect","lineTo","dx","Math","abs","dy","clear","p","fireWork","active","update","deltaTime","clearDraw"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Graphics, EventTouch, v3, Vec3, log, Vec2, v2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_science')\r\nexport class level1_science extends Component {\r\n    @property(Node)\r\n    left: Node = null;\r\n    @property(Node)\r\n    right: Node = null;\r\n    @property(Node)\r\n    area: Node = null;\r\n    @property(Node)\r\n    draw: Node = null;\r\n    @property(Node)\r\n    fireWork: Node = null;\r\n    private graphics: Graphics = null;\r\n    private rightP: Vec2;\r\n    private leftP: Vec2;\r\n    start() {\r\n        this.initGraphic();\r\n        this.draw.on(Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.draw.on(Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        this.draw.on(Node.EventType.TOUCH_END, this.touchEnd, this)\r\n    }\r\n    initGraphic(){\r\n        this.graphics = this.draw.getComponent(Graphics);\r\n        this.graphics.lineWidth = 10;\r\n\r\n        // let startP = this.left.getWorldPosition();\r\n        // let endP = this.right.getWorldPosition();\r\n        // log(\"check before\", endP, startP);\r\n        // this.rightP = v2(endP.x, endP.y);\r\n        // let g = this.graphics;\r\n        // g.moveTo(startP.x, startP.y);\r\n        // g.lineTo(startP.x+2, startP.y+2);\r\n        // g.stroke();\r\n    }\r\n    touchStart(event: EventTouch){\r\n        let startP = this.left.getWorldPosition();\r\n        let endP = this.right.getWorldPosition();\r\n        this.rightP = v2(endP.x, endP.y);\r\n        this.leftP = v2(startP.x, startP.y);\r\n        log(\"check endP\", endP, startP);\r\n        let pStart = event.getUILocation();\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(pStart.x, pStart.y, 0));\r\n        let g = this.graphics;\r\n        g.moveTo(out.x, out.y);\r\n        g.stroke();\r\n    }\r\n\r\n    touchMove(event: EventTouch){\r\n        let newP = event.getUILocation();\r\n        this.checkCorrect(newP);\r\n        let out = v3();\r\n        this.area.inverseTransformPoint(out, v3(newP.x, newP.y, 0));\r\n        let g = this.graphics;\r\n        g.lineTo(out.x, out.y);\r\n        g.stroke();\r\n    }\r\n    touchEnd(event: EventTouch) {\r\n        let endP = event.getUILocation();\r\n        let dx = Math.abs(endP.x-this.leftP.x);\r\n        let dy = Math.abs(endP.y-this.leftP.y);\r\n        if(dx >= 40 || dy>=40) {\r\n            this.graphics.clear();\r\n            log(\"draw gain!!\");\r\n        }else{\r\n            //noi lien lai diem start\r\n        }\r\n    }\r\n    checkCorrect(p: Vec2){\r\n        log(\"check startP\", this.rightP, p);\r\n        let dx = Math.abs(p.x-this.rightP.x);\r\n        let dy = Math.abs(p.y-this.rightP.y);\r\n        if(dx <= 40 && dy<=40) {\r\n            this.fireWork.active = true;\r\n            log(\"correct!!!!!!!\");\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    clearDraw(){\r\n        this.graphics.clear();\r\n    }\r\n}\r\n\r\n\r\n"]}