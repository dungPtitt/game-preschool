{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-framework/ui/VDTabbarItem.ts"],"names":["ccclass","property","cc","_decorator","VDTabbarItem","CCString","SpriteFrame","Prefab","Node","Component","_icon","_label","_content","_selected","content","prefab","instantiate","nodeContent","selected","setSelected","value","active","spriteFrame","selectedSprite","deselectedSprite","touchHandler","node","getComponent","Button","interactable","onLoad","getComponentInChildren","Sprite","Label","title","string","start"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;OAGM;AAAEA,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBC,EAAE,CAACC,U;;yBAGZC,Y,WAEhBH,QAAQ,CAACC,EAAE,CAACG,QAAJ,C,UAGRJ,QAAQ,CAACC,EAAE,CAACI,WAAJ,C,UAGRL,QAAQ,CAACC,EAAE,CAACI,WAAJ,C,UAGRL,QAAQ,CAACC,EAAE,CAACK,MAAJ,C,UAGRN,QAAQ,CAACC,EAAE,CAACM,IAAJ,C,EAfZR,O,qBAAD,MACqBI,YADrB,SAC0CF,EAAE,CAACO,SAD7C,CACuD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAiB3CC,KAjB2C,GAiBjB,IAjBiB;AAAA,eAkB3CC,MAlB2C,GAkBjB,IAlBiB;AAAA,eAoB3CC,QApB2C,GAoBvB,IApBuB;AAAA,eAgC3CC,SAhC2C,GAgCtB,KAhCsB;AAAA;;AAqBjC,YAAPC,OAAO,GAAY;AAC1B,cAAI,CAAC,KAAKF,QAAV,EAAoB;AAChB,gBAAI,KAAKG,MAAT,EAAiB;AACb,mBAAKH,QAAL,GAAgBV,EAAE,CAACc,WAAH,CAAe,KAAKD,MAApB,CAAhB;AACH,aAFD,MAEO,IAAI,KAAKE,WAAT,EAAsB;AACzB,mBAAKL,QAAL,GAAgB,KAAKK,WAArB;AACH;AACJ;;AACD,iBAAO,KAAKL,QAAZ;AACH;;AAGkB,YAARM,QAAQ,GAAY;AAC3B,iBAAO,KAAKL,SAAZ;AACH;;AAEMM,QAAAA,WAAW,CAACC,KAAD,EAAiB;AAC/B,eAAKP,SAAL,GAAiBO,KAAjB;AACA,eAAKN,OAAL,KAAiB,KAAKA,OAAL,CAAaO,MAAb,GAAsBD,KAAvC;;AACA,cAAI,KAAKP,SAAT,EAAoB;AAChB,iBAAKH,KAAL,KAAe,KAAKA,KAAL,CAAWY,WAAX,GAAyB,KAAKC,cAA7C;AACH,WAFD,MAGK;AACD,iBAAKb,KAAL,KAAe,KAAKA,KAAL,CAAWY,WAAX,GAAyB,KAAKE,gBAA7C;AACH;;AAED,cAAIC,YAAY,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBzB,EAAE,CAAC0B,MAA1B,CAAnB;AACAH,UAAAA,YAAY,CAACI,YAAb,GAA4B,CAACT,KAA7B;AACH;;AAEDU,QAAAA,MAAM,GAAG;AACL,eAAKpB,KAAL,GAAa,KAAKgB,IAAL,CAAUK,sBAAV,CAAiC7B,EAAE,CAAC8B,MAApC,CAAb;AACA,eAAKrB,MAAL,GAAc,KAAKe,IAAL,CAAUK,sBAAV,CAAiC7B,EAAE,CAAC+B,KAApC,CAAd;;AACA,cAAI,KAAKpB,SAAT,EAAoB;AAChB,iBAAKH,KAAL,KAAe,KAAKA,KAAL,CAAWY,WAAX,GAAyB,KAAKC,cAA7C;AACH,WAFD,MAGK;AACD,iBAAKb,KAAL,KAAe,KAAKA,KAAL,CAAWY,WAAX,GAAyB,KAAKE,gBAA7C;AACH;;AACD,eAAKb,MAAL,IAAe,KAAKuB,KAApB,KAA8B,KAAKvB,MAAL,CAAYwB,MAAZ,GAAqB,KAAKD,KAAxD;AACH;;AAGDE,QAAAA,KAAK,GAAG,CAEP;;AAlEkD,O;;;;;iBAGnC,E;;;;;;;iBAGiB,I;;;;;;;iBAGE,I;;;;;;;iBAGf,I;;;;;;;iBAGG,I","sourcesContent":["import * as cc from 'cc';\nimport VDControlEvent from \"./VDControlEvent\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class VDTabbarItem extends cc.Component {\n\n    @property(cc.CCString)\n    title: string = \"\";\n\n    @property(cc.SpriteFrame)\n    selectedSprite: cc.SpriteFrame = null!;\n\n    @property(cc.SpriteFrame)\n    deselectedSprite: cc.SpriteFrame = null!;\n\n    @property(cc.Prefab)\n    prefab: cc.Prefab = null!;\n\n    @property(cc.Node)\n    nodeContent: cc.Node = null!;\n\n    private _icon: cc.Sprite | null = null;\n    private _label: cc.Label | null = null;\n\n    private _content: cc.Node = null!;\n    public get content(): cc.Node {\n        if (!this._content) {\n            if (this.prefab) {\n                this._content = cc.instantiate(this.prefab);\n            } else if (this.nodeContent) {\n                this._content = this.nodeContent;\n            }\n        }\n        return this._content;\n    }\n\n    private _selected: boolean = false;\n    public get selected(): boolean {\n        return this._selected;\n    }\n\n    public setSelected(value: boolean) {\n        this._selected = value;\n        this.content && (this.content.active = value);\n        if (this._selected) {\n            this._icon && (this._icon.spriteFrame = this.selectedSprite);\n        }\n        else {\n            this._icon && (this._icon.spriteFrame = this.deselectedSprite);\n        }\n\n        let touchHandler = this.node.getComponent(cc.Button) as cc.Button;\n        touchHandler.interactable = !value;\n    }\n\n    onLoad() {\n        this._icon = this.node.getComponentInChildren(cc.Sprite);\n        this._label = this.node.getComponentInChildren(cc.Label);\n        if (this._selected) {\n            this._icon && (this._icon.spriteFrame = this.selectedSprite);\n        }\n        else {\n            this._icon && (this._icon.spriteFrame = this.deselectedSprite);\n        }\n        this._label && this.title && (this._label.string = this.title);\n    }\n\n\n    start() {\n\n    }\n}\n"]}