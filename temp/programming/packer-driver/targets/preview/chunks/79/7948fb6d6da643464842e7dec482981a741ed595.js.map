{"version":3,"sources":["file:///D:/game/FrameworkCocos/assets/vd-games/preschool-exam/script/screens/comparison/level1_comp.ts"],"names":["_decorator","Component","Node","Sprite","Color","log","Prefab","VDScreenManager","ScaleFactor","scaleTo","TimeFactor","ccclass","property","level1_comp","type","onClickInstruction","pointer","active","p","answer","getWorldPosition","setWorldPosition","x","y","sprite","getComponent","color","BIG_BY_2","SMALL_BY_0_5","MEDIUM","toDefault","bind","onClickBtnNext","event","data","level2_screen","instance","assetBundle","get","String","pushScreen","screen","onClickBack","popScreen","start","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,M,OAAAA,M;;AAEnDC,MAAAA,e;;AACEC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,O,iBAAAA,O;AAASC,MAAAA,U,iBAAAA,U;;;;;;;;;OACzB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;6BAGjBa,W,WADZF,OAAO,CAAC,aAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEZ;AAAP,OAAD,C,UAERU,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEZ;AAAP,OAAD,C,2BAJb,MACaW,WADb,SACiCZ,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAMvCc,QAAAA,kBAAkB,GAAG;AACjB,eAAKC,OAAL,CAAaC,MAAb,GAAsB,IAAtB;AACA,cAAIC,CAAC,GAAG,KAAKC,MAAL,CAAYC,gBAAZ,EAAR;AACA,eAAKJ,OAAL,CAAaK,gBAAb,CAA8BH,CAAC,CAACI,CAAhC,EAAmCJ,CAAC,CAACK,CAArC,EAAwC,CAAxC;AACA,cAAIC,MAAM,GAAI,KAAKL,MAAL,CAAYM,YAAZ,CAAyBtB,MAAzB,CAAd;AACAqB,UAAAA,MAAM,CAACE,KAAP,GAAe,IAAItB,KAAJ,CAAU,EAAV,EAAc,EAAd,EAAkB,GAAlB,CAAf;AACA;AAAA;AAAA,kCAAQ,KAAKe,MAAb,EAAqB;AAAA;AAAA,0CAAYQ,QAAjC,EAA2C;AAAA;AAAA,0CAAYC,YAAvD,EAAqE;AAAA;AAAA,wCAAWC,MAAhF,EAAwF,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAxF;AACH;;AAEDC,QAAAA,cAAc,CAACC,KAAD,EAAoBC,IAApB,EAA+B;AACzC7B,UAAAA,GAAG,CAAC,gBAAD,EAAmB6B,IAAnB,CAAH;AACA,cAAIC,aAAa,GAAG;AAAA;AAAA,kDAAgBC,QAAhB,CAAyBC,WAAzB,CAAqCC,GAArC,CAAyC,wCAAsCC,MAAM,CAACL,IAAD,CAArF,EAA6F5B,MAA7F,CAApB;AACA;AAAA;AAAA,kDAAgB8B,QAAhB,CAAyBI,UAAzB,CAAoCL,aAApC,EAAoDM,MAAD,IAA0B,CAAG,CAAhF,EAAkF,IAAlF;AACH;;AAEDC,QAAAA,WAAW,GAAG;AACVrC,UAAAA,GAAG,sBAAH;AACA;AAAA;AAAA,kDAAgB+B,QAAhB,CAAyBO,SAAzB,CAAmC,IAAnC;AACH;;AAEDb,QAAAA,SAAS,GAAG;AACR,cAAIN,MAAM,GAAI,KAAKL,MAAL,CAAYM,YAAZ,CAAyBtB,MAAzB,CAAd;AACAqB,UAAAA,MAAM,CAACE,KAAP,GAAe,IAAItB,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CAAf;AACH;;AACDwC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AApCsC,O;;;;;iBAExB,I;;;;;;;iBAEC,I","sourcesContent":["import { _decorator, Component, Node, Sprite, Color, log, Prefab } from 'cc';\r\nimport VDBaseScreen from '../../../../../vd-framework/ui/VDBaseScreen';\r\nimport VDScreenManager from '../../../../../vd-framework/ui/VDScreenManager';\r\nimport { ScaleFactor, scaleTo, TimeFactor } from '../../transiton/Transformation';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('level1_comp')\r\nexport class level1_comp extends Component {\r\n    @property({type: Node})\r\n    answer: Node = null;\r\n    @property({type: Node})\r\n    pointer: Node = null;\r\n\r\n    onClickInstruction() {\r\n        this.pointer.active = true;\r\n        let p = this.answer.getWorldPosition();\r\n        this.pointer.setWorldPosition(p.x, p.y, 0);\r\n        let sprite =  this.answer.getComponent(Sprite);\r\n        sprite.color = new Color(67, 14, 180); \r\n        scaleTo(this.answer, ScaleFactor.BIG_BY_2, ScaleFactor.SMALL_BY_0_5, TimeFactor.MEDIUM, this.toDefault.bind(this));\r\n    }\r\n\r\n    onClickBtnNext(event: TouchEvent, data: any) {\r\n        log(\"check number: \", data)\r\n        let level2_screen = VDScreenManager.instance.assetBundle.get('res/prefabs/screen/comparison/level'+String(data), Prefab)!;\r\n        VDScreenManager.instance.pushScreen(level2_screen, (screen: VDBaseScreen) => { }, true);\r\n    }\r\n\r\n    onClickBack() {\r\n        log(`onClickBtnPrevious`);\r\n        VDScreenManager.instance.popScreen(true);\r\n    }\r\n\r\n    toDefault() {\r\n        let sprite =  this.answer.getComponent(Sprite);\r\n        sprite.color = new Color(204, 204, 204); \r\n    }\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}